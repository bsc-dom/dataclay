name: Docker

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      # The following steps are mostly inspired by the example found in 
      # the README.md at https://github.com/docker/build-push-action

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: "true"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=edge,suffix=-py${{ matrix.python-version }},branch=main
            type=edge,enable=${{ matrix.python-version == '3.10' }},branch=main

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: legacy-deps-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=edge,suffix=-legacydeps-py${{ matrix.python-version }},branch=main
            type=edge,suffix=-legacydeps,enable=${{ matrix.python-version == '3.10' }},branch=main

      # Build and push Docker image with Buildx (don't push on PR)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: 
            - PYTHON_VERSION=${{ matrix.python-version }}-bullseye
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Docker image with legacy dependencies
        if: matrix.python-version == '3.9' || matrix.python-version == '3.10'
        id: build-and-push-legacydeps
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: 
            - PYTHON_VERSION=${{ matrix.python-version }}-bullseye
            - LEGACY_DEPS=True
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.legacy-deps-meta.outputs.tags }}
          labels: ${{ steps.legacy-deps-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
