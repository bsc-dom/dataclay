versions pytest-7.4.3, python-3.10.12.final.0
cwd=/home/dcanocan/Desktop/Curro/git/dataclay
args=('--debug=trace',)

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x749aee007f40>
    pytest_plugin_registered [hook]
        plugin: <Session dataclay exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x749aee007f40>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x749aedce9030>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x749aedce85b0>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x749aee007f40>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/legacypath.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/python_path.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_docker' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/pytest_docker/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x749aedce9030>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x749aedce85b0>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x749aedce84f0>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x749aeda56cb0>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x749aee007f40>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/legacypath.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/python_path.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_docker' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/pytest_docker/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x749aedce9030>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x749aedce85b0>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x749aedce84f0>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x749aeda56cb0>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x749aedce9420>
          manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x749aee007f40>
          start_path: /home/dcanocan/Desktop/Curro/git/dataclay
          startdir: /home/dcanocan/Desktop/Curro/git/dataclay
      early skip of rewriting module: email.parser [assertion]
      early skip of rewriting module: email.feedparser [assertion]
      finish pytest_report_header --> [['asyncio: mode=strict'], ['rootdir: /home/dcanocan/Desktop/Curro/git/dataclay', 'configfile: pyproject.toml', 'plugins: docker-2.0.1, asyncio-0.23.8'], ['using: pytest-7.4.3', 'setuptools registered plugins:', '  pytest-docker-2.0.1 at /home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/pytest_docker/__init__.py', '  pytest-asyncio-0.23.8 at /home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/pytest_asyncio/plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['/home/dcanocan/Desktop/Curro/git/dataclay'] [collection]
        pytest_collectstart [hook]
            collector: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument (PosixPath('/home/dcanocan/Desktop/Curro/git/dataclay'), []) [collection]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage.backend1
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage.backend1
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage.backend1
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage.backend1
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage.backend2
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage.backend2
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage.backend2
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage.backend2
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage.backend3
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage.backend3
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage.backend3
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage.backend3
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage.metadata
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage.metadata
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage.metadata
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.coverage.metadata
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/.dockerignore
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.dockerignore
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/.dockerignore
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.dockerignore
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/.gitignore
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.gitignore
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/.gitignore
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.gitignore
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/.gitmodules
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.gitmodules
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/.gitmodules
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.gitmodules
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/.readthedocs.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.readthedocs.yml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/.readthedocs.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.readthedocs.yml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/.rsync-filter
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.rsync-filter
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/.rsync-filter
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.rsync-filter
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/CHANGES.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/CHANGES.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/CHANGES.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/CHANGES.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/Dockerfile
                path: /home/dcanocan/Desktop/Curro/git/dataclay/Dockerfile
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/Dockerfile
                path: /home/dcanocan/Desktop/Curro/git/dataclay/Dockerfile
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/Dockerfile.dev
                path: /home/dcanocan/Desktop/Curro/git/dataclay/Dockerfile.dev
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/Dockerfile.dev
                path: /home/dcanocan/Desktop/Curro/git/dataclay/Dockerfile.dev
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/LICENSE.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/LICENSE.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/LICENSE.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/LICENSE.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/MANIFEST.in
                path: /home/dcanocan/Desktop/Curro/git/dataclay/MANIFEST.in
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/MANIFEST.in
                path: /home/dcanocan/Desktop/Curro/git/dataclay/MANIFEST.in
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/PUBLISH.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/PUBLISH.md
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/PUBLISH.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/PUBLISH.md
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/README.md
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/README.md
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/compile-protos.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/compile-protos.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/compile-protos.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/compile-protos.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/coverage.xml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/coverage.xml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/coverage.xml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/coverage.xml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docker-compose.yml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docker-compose.yml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/pyproject.toml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/pyproject.toml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/pyproject.toml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/pyproject.toml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/setup.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/setup.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/setup.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/setup.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tox.ini
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tox.ini
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/tox.ini
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tox.ini
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/trace
                path: /home/dcanocan/Desktop/Curro/git/dataclay/trace
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/trace
                path: /home/dcanocan/Desktop/Curro/git/dataclay/trace
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/.git
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.git
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/.github
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.github
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/.pytest_cache
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.pytest_cache
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/.tox
                path: /home/dcanocan/Desktop/Curro/git/dataclay/.tox
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/.gitignore
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/.gitignore
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/.gitignore
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/.gitignore
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/README.md
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/README.md
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/dependency-reduced-pom.xml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/dependency-reduced-pom.xml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/dependency-reduced-pom.xml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/dependency-reduced-pom.xml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/pom.xml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/pom.xml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/pom.xml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/pom.xml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/storage_props_example
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/storage_props_example
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/storage_props_example
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/storage_props_example
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/scripts
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/scripts
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/scripts/storage_init.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/scripts/storage_init.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/scripts/storage_init.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/scripts/storage_init.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/backend
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/backend
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/backend/BackendClient.java
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/backend/BackendClient.java
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/backend/BackendClient.java
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/backend/BackendClient.java
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata/BackendMetadata.java
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata/BackendMetadata.java
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata/BackendMetadata.java
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata/BackendMetadata.java
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata/MetadataAPI.java
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata/MetadataAPI.java
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata/MetadataAPI.java
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata/MetadataAPI.java
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata/MetadataClient.java
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata/MetadataClient.java
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata/MetadataClient.java
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata/MetadataClient.java
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata/ObjectMetadata.java
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata/ObjectMetadata.java
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata/ObjectMetadata.java
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/es/bsc/dataclay/metadata/ObjectMetadata.java
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/storage
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/storage
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/storage/StorageException.java
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/storage/StorageException.java
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/storage/StorageException.java
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/storage/StorageException.java
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/storage/StorageItf-old.java-old
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/storage/StorageItf-old.java-old
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/storage/StorageItf-old.java-old
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/storage/StorageItf-old.java-old
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/storage/StorageItf.java
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/storage/StorageItf.java
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/storage/StorageItf.java
                path: /home/dcanocan/Desktop/Curro/git/dataclay/addons/storage/src/main/java/storage/StorageItf.java
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/.gitignore
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/.gitignore
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/.gitignore
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/.gitignore
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/README.md
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/README.md
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/.git
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/.git
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/backend
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/backend
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/backend/backend.proto
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/backend/backend.proto
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/backend/backend.proto
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/backend/backend.proto
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/common
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/common
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/common/common.proto
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/common/common.proto
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/common/common.proto
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/common/common.proto
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/metadata
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/metadata
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/metadata/metadata.proto
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/metadata/metadata.proto
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/metadata/metadata.proto
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dataclay-common/dataclay/proto/metadata/metadata.proto
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/dist
                path: /home/dcanocan/Desktop/Curro/git/dataclay/dist
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/Makefile
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/Makefile
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/Makefile
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/Makefile
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/README.md
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/README.md
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/advanced-usage.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/advanced-usage.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/advanced-usage.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/advanced-usage.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/alien-objects.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/alien-objects.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/alien-objects.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/alien-objects.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/conf.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/conf.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/conf.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/conf.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contributing.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contributing.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contributing.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contributing.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/index.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/index.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/index.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/index.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/main-concepts.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/main-concepts.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/main-concepts.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/main-concepts.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/make.bat
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/make.bat
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/make.bat
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/make.bat
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/telemetry.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/telemetry.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/telemetry.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/telemetry.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/user-guide.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/user-guide.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/user-guide.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/user-guide.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/advanced-usage.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/advanced-usage.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/advanced-usage.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/advanced-usage.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/alien-objects.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/alien-objects.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/alien-objects.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/alien-objects.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contributing.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contributing.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contributing.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contributing.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/environment.pickle
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/environment.pickle
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/environment.pickle
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/environment.pickle
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/index.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/index.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/index.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/index.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/main-concepts.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/main-concepts.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/main-concepts.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/main-concepts.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/telemetry.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/telemetry.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/telemetry.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/telemetry.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/user-guide.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/user-guide.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/user-guide.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/user-guide.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib/index.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib/index.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib/index.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib/index.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib/mqtt.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib/mqtt.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib/mqtt.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib/mqtt.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib/nvm.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib/nvm.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib/nvm.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib/nvm.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib/zenoh.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib/zenoh.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib/zenoh.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/contrib/zenoh.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/compile-redis.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/compile-redis.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/compile-redis.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/compile-redis.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/docker-deployment.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/docker-deployment.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/docker-deployment.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/docker-deployment.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/envvars.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/envvars.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/envvars.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/envvars.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/hpc-manual-deployment.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/hpc-manual-deployment.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/hpc-manual-deployment.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/hpc-manual-deployment.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/management.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/management.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/management.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/management.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/proxy.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/proxy.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/proxy.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/deployment/proxy.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/hello-family.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/hello-family.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/hello-family.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/hello-family.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/index.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/index.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/index.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/index.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/mqtt.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/mqtt.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/mqtt.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/mqtt.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/quickstart.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/quickstart.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/quickstart.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/quickstart.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/zenoh.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/zenoh.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/zenoh.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/examples/zenoh.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/aliendco.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/aliendco.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/aliendco.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/aliendco.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/annotations.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/annotations.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/annotations.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/annotations.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/dataclay.backend.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/dataclay.backend.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/dataclay.backend.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/dataclay.backend.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/dataclay.client.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/dataclay.client.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/dataclay.client.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/dataclay.client.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/dataclay.dataclay_object.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/dataclay.dataclay_object.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/dataclay.dataclay_object.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/dataclay.dataclay_object.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/dataclay.metadata.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/dataclay.metadata.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/dataclay.metadata.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/dataclay.metadata.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/index.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/index.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/index.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/reference/index.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/releasenotes
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/releasenotes
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/releasenotes/3-x.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/releasenotes/3-x.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/releasenotes/3-x.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/releasenotes/3-x.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/releasenotes/4-x.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/releasenotes/4-x.doctree
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/releasenotes/4-x.doctree
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/doctrees/releasenotes/4-x.doctree
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/.buildinfo
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/.buildinfo
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/.buildinfo
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/.buildinfo
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/advanced-usage.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/advanced-usage.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/advanced-usage.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/advanced-usage.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/alien-objects.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/alien-objects.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/alien-objects.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/alien-objects.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contributing.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contributing.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contributing.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contributing.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/genindex.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/genindex.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/genindex.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/genindex.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/index.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/index.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/index.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/index.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/main-concepts.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/main-concepts.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/main-concepts.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/main-concepts.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/objects.inv
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/objects.inv
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/objects.inv
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/objects.inv
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/py-modindex.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/py-modindex.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/py-modindex.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/py-modindex.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/search.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/search.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/search.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/search.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/searchindex.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/searchindex.js
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/searchindex.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/searchindex.js
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/telemetry.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/telemetry.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/telemetry.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/telemetry.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/user-guide.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/user-guide.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/user-guide.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/user-guide.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/index.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/index.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/index.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/index.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/annotated.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/annotated.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/annotated.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/annotated.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/config.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/config.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/config.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/config.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/dataclay_object.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/dataclay_object.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/dataclay_object.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/dataclay_object.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/backend
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/backend
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/backend/api.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/backend/api.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/backend/api.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/backend/api.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/client
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/client
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/client/api.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/client/api.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/client/api.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/client/api.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/contrib
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/contrib
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/contrib/mqtt.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/contrib/mqtt.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/contrib/mqtt.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/contrib/mqtt.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/contrib/nvm.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/contrib/nvm.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/contrib/nvm.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/contrib/nvm.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/contrib/zenoh_module.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/contrib/zenoh_module.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/contrib/zenoh_module.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/contrib/zenoh_module.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/metadata
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/metadata
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/metadata/api.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/metadata/api.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/metadata/api.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_modules/dataclay/metadata/api.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/advanced-usage.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/advanced-usage.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/advanced-usage.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/advanced-usage.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/alien-objects.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/alien-objects.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/alien-objects.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/alien-objects.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contributing.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contributing.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contributing.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contributing.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/index.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/index.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/index.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/index.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/main-concepts.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/main-concepts.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/main-concepts.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/main-concepts.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/telemetry.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/telemetry.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/telemetry.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/telemetry.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/user-guide.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/user-guide.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/user-guide.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/user-guide.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib/index.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib/index.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib/index.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib/index.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib/mqtt.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib/mqtt.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib/mqtt.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib/mqtt.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib/nvm.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib/nvm.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib/nvm.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib/nvm.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib/zenoh.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib/zenoh.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib/zenoh.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/contrib/zenoh.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/compile-redis.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/compile-redis.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/compile-redis.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/compile-redis.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/docker-deployment.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/docker-deployment.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/docker-deployment.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/docker-deployment.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/envvars.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/envvars.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/envvars.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/envvars.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/hpc-manual-deployment.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/hpc-manual-deployment.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/hpc-manual-deployment.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/hpc-manual-deployment.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/management.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/management.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/management.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/management.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/proxy.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/proxy.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/proxy.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/deployment/proxy.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/hello-family.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/hello-family.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/hello-family.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/hello-family.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/index.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/index.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/index.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/index.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/mqtt.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/mqtt.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/mqtt.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/mqtt.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/quickstart.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/quickstart.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/quickstart.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/quickstart.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/zenoh.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/zenoh.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/zenoh.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/examples/zenoh.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/aliendco.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/aliendco.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/aliendco.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/aliendco.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/annotations.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/annotations.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/annotations.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/annotations.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/dataclay.backend.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/dataclay.backend.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/dataclay.backend.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/dataclay.backend.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/dataclay.client.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/dataclay.client.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/dataclay.client.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/dataclay.client.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/dataclay.dataclay_object.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/dataclay.dataclay_object.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/dataclay.dataclay_object.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/dataclay.dataclay_object.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/dataclay.metadata.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/dataclay.metadata.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/dataclay.metadata.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/dataclay.metadata.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/index.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/index.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/index.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/reference/index.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/releasenotes
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/releasenotes
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/releasenotes/3-x.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/releasenotes/3-x.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/releasenotes/3-x.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/releasenotes/3-x.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/releasenotes/4-x.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/releasenotes/4-x.rst.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/releasenotes/4-x.rst.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_sources/releasenotes/4-x.rst.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/basic.css
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/basic.css
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/basic.css
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/basic.css
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/check-solid.svg
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/check-solid.svg
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/check-solid.svg
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/check-solid.svg
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/clipboard.min.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/clipboard.min.js
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/clipboard.min.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/clipboard.min.js
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/copy-button.svg
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/copy-button.svg
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/copy-button.svg
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/copy-button.svg
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/copybutton.css
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/copybutton.css
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/copybutton.css
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/copybutton.css
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/copybutton.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/copybutton.js
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/copybutton.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/copybutton.js
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/copybutton_funcs.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/copybutton_funcs.js
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/copybutton_funcs.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/copybutton_funcs.js
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/dataclay-full.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/dataclay-full.png
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/dataclay-full.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/dataclay-full.png
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/dataclay-logo.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/dataclay-logo.png
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/dataclay-logo.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/dataclay-logo.png
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/dataclay-name.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/dataclay-name.png
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/dataclay-name.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/dataclay-name.png
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/debug.css
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/debug.css
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/debug.css
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/debug.css
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/doctools.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/doctools.js
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/doctools.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/doctools.js
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/documentation_options.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/documentation_options.js
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/documentation_options.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/documentation_options.js
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/file.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/file.png
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/file.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/file.png
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/language_data.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/language_data.js
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/language_data.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/language_data.js
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/minus.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/minus.png
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/minus.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/minus.png
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/plus.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/plus.png
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/plus.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/plus.png
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/pygments.css
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/pygments.css
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/pygments.css
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/pygments.css
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/searchtools.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/searchtools.js
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/searchtools.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/searchtools.js
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/skeleton.css
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/skeleton.css
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/skeleton.css
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/skeleton.css
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/sphinx_highlight.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/sphinx_highlight.js
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/sphinx_highlight.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/sphinx_highlight.js
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts/furo-extensions.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts/furo-extensions.js
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts/furo-extensions.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts/furo-extensions.js
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts/furo.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts/furo.js
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts/furo.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts/furo.js
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts/furo.js.LICENSE.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts/furo.js.LICENSE.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts/furo.js.LICENSE.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts/furo.js.LICENSE.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts/furo.js.map
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts/furo.js.map
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts/furo.js.map
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/scripts/furo.js.map
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles/furo-extensions.css
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles/furo-extensions.css
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles/furo-extensions.css
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles/furo-extensions.css
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles/furo-extensions.css.map
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles/furo-extensions.css.map
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles/furo-extensions.css.map
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles/furo-extensions.css.map
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles/furo.css
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles/furo.css
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles/furo.css
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles/furo.css
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles/furo.css.map
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles/furo.css.map
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles/furo.css.map
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/_static/styles/furo.css.map
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib/index.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib/index.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib/index.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib/index.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib/mqtt.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib/mqtt.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib/mqtt.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib/mqtt.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib/nvm.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib/nvm.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib/nvm.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib/nvm.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib/zenoh.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib/zenoh.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib/zenoh.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/contrib/zenoh.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/compile-redis.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/compile-redis.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/compile-redis.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/compile-redis.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/docker-deployment.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/docker-deployment.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/docker-deployment.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/docker-deployment.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/envvars.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/envvars.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/envvars.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/envvars.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/hpc-manual-deployment.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/hpc-manual-deployment.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/hpc-manual-deployment.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/hpc-manual-deployment.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/management.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/management.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/management.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/management.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/proxy.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/proxy.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/proxy.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/deployment/proxy.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/hello-family.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/hello-family.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/hello-family.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/hello-family.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/index.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/index.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/index.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/index.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/mqtt.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/mqtt.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/mqtt.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/mqtt.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/quickstart.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/quickstart.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/quickstart.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/quickstart.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/zenoh.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/zenoh.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/zenoh.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/examples/zenoh.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/aliendco.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/aliendco.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/aliendco.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/aliendco.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/annotations.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/annotations.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/annotations.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/annotations.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/dataclay.backend.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/dataclay.backend.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/dataclay.backend.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/dataclay.backend.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/dataclay.client.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/dataclay.client.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/dataclay.client.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/dataclay.client.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/dataclay.dataclay_object.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/dataclay.dataclay_object.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/dataclay.dataclay_object.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/dataclay.dataclay_object.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/dataclay.metadata.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/dataclay.metadata.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/dataclay.metadata.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/dataclay.metadata.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/index.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/index.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/index.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/reference/index.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/releasenotes
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/releasenotes
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/releasenotes/3-x.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/releasenotes/3-x.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/releasenotes/3-x.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/releasenotes/3-x.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/releasenotes/4-x.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/releasenotes/4-x.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/releasenotes/4-x.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_build/html/releasenotes/4-x.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_static
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_static
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_static/dataclay-full.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_static/dataclay-full.png
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_static/dataclay-full.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_static/dataclay-full.png
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_static/dataclay-logo.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_static/dataclay-logo.png
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_static/dataclay-logo.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_static/dataclay-logo.png
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_static/dataclay-name.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_static/dataclay-name.png
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_static/dataclay-name.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/_static/dataclay-name.png
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib/index.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib/index.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib/index.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib/index.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib/mqtt.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib/mqtt.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib/mqtt.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib/mqtt.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib/nvm.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib/nvm.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib/nvm.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib/nvm.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib/zenoh.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib/zenoh.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib/zenoh.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/contrib/zenoh.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/compile-redis.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/compile-redis.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/compile-redis.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/compile-redis.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/docker-deployment.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/docker-deployment.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/docker-deployment.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/docker-deployment.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/envvars.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/envvars.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/envvars.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/envvars.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/hpc-manual-deployment.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/hpc-manual-deployment.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/hpc-manual-deployment.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/hpc-manual-deployment.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/management.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/management.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/management.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/management.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/proxy.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/proxy.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/proxy.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/deployment/proxy.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/hello-family.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/hello-family.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/hello-family.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/hello-family.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/index.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/index.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/index.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/index.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/mqtt.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/mqtt.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/mqtt.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/mqtt.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/quickstart.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/quickstart.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/quickstart.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/quickstart.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/zenoh.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/zenoh.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/zenoh.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/examples/zenoh.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/aliendco.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/aliendco.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/aliendco.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/aliendco.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/annotations.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/annotations.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/annotations.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/annotations.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/dataclay.backend.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/dataclay.backend.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/dataclay.backend.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/dataclay.backend.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/dataclay.client.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/dataclay.client.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/dataclay.client.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/dataclay.client.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/dataclay.dataclay_object.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/dataclay.dataclay_object.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/dataclay.dataclay_object.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/dataclay.dataclay_object.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/dataclay.metadata.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/dataclay.metadata.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/dataclay.metadata.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/dataclay.metadata.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/index.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/index.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/index.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/reference/index.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/releasenotes
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/releasenotes
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/releasenotes/3-x.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/releasenotes/3-x.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/releasenotes/3-x.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/releasenotes/3-x.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/releasenotes/4-x.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/releasenotes/4-x.rst
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/releasenotes/4-x.rst
                path: /home/dcanocan/Desktop/Curro/git/dataclay/docs/releasenotes/4-x.rst
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/README.md
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/README.md
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/async-client
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/async-client
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/async-client/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/async-client/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/async-client/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/async-client/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/.env
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/.env
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/.env
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/.env
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/client_compss.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/client_compss.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/client_compss.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/client_compss.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/job.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/job.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/job_redis_cluster.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/job_redis_cluster.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/job_redis_cluster.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/job_redis_cluster.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/results.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/results.md
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/results.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/results.md
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/run_compss.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/run_compss.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/run_compss.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b1/run_compss.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/.env
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/.env
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/.env
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/.env
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/client_compss.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/client_compss.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/client_compss.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/client_compss.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/job.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/job.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/job_redis_cluster.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/job_redis_cluster.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/job_redis_cluster.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/job_redis_cluster.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/results.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/results.md
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/results.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/results.md
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/run_compss.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/run_compss.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/run_compss.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b2/run_compss.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3/client_compss.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3/client_compss.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3/client_compss.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3/client_compss.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3/job.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3/job.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3/run_compss.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3/run_compss.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3/run_compss.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/benchmarks/b3/run_compss.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/client-start-stop
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/client-start-stop
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/client-start-stop/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/client-start-stop/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/client-start-stop/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/client-start-stop/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/compss-app
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/compss-app
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/compss-app/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/compss-app/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/compss-app/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/compss-app/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/compss-app/run_compss.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/compss-app/run_compss.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/compss-app/run_compss.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/compss-app/run_compss.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/.gitignore
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/.gitignore
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/.gitignore
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/.gitignore
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/dashboard.json
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/dashboard.json
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/dashboard.json
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/dashboard.json
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/docker-compose.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/docker-compose.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/docker-compose.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/docker-compose.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/otel-collector.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/otel-collector.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/otel-collector.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/otel-collector.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/config
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/config
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/config/grafana-datasources.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/config/grafana-datasources.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/config/grafana-datasources.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/config/grafana-datasources.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/config/prometheus.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/config/prometheus.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/config/prometheus.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/config/prometheus.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/config/tempo.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/config/tempo.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/config/tempo.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/grafana-tempo/config/tempo.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/.env
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/.env
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/.env
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/.env
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/docker-compose.yml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/docker-compose.yml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/job.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/job.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/model
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/model
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/model/family.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/model/family.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/model/family.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/hello-family/model/family.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/grow
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/grow
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/grow/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/grow/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/grow/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/grow/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/grow/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/grow/job.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/grow/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/grow/job.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/shrink
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/shrink
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/shrink/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/shrink/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/shrink/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/shrink/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/shrink/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/shrink/job.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/shrink/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/malleability/shrink/job.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/.env
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/.env
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/.env
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/.env
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/job.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/job.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/matrix-generator.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/matrix-generator.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/matrix-generator.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/matrix-generator.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/.PLACEHOLDER
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/.PLACEHOLDER
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/.PLACEHOLDER
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/.PLACEHOLDER
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-01.npy
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-01.npy
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-01.npy
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-01.npy
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-02.npy
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-02.npy
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-02.npy
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-02.npy
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-03.npy
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-03.npy
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-03.npy
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-03.npy
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-04.npy
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-04.npy
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-04.npy
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-04.npy
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-05.npy
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-05.npy
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-05.npy
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/matrix-operations/data/matrix-05.npy
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/docker-compose.yml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/docker-compose.yml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/receiver.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/receiver.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/receiver.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/receiver.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/sender.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/sender.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/sender.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/sender.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/config
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/config
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/config/mosquitto.conf
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/config/mosquitto.conf
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/config/mosquitto.conf
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/config/mosquitto.conf
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/model
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/model
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/model/mqttsubs.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/model/mqttsubs.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/model/mqttsubs.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/mqtt/model/mqttsubs.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/multithread-client
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/multithread-client
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/multithread-client/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/multithread-client/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/multithread-client/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/multithread-client/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence/.gitignore
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence/.gitignore
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence/.gitignore
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence/.gitignore
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence/README.md
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence/README.md
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence/docker-compose.yml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/persistence/docker-compose.yml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/README.md
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/README.md
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/docker-compose.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/docker-compose.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/docker-compose.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/docker-compose.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/config
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/config
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/config/prometheus.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/config/prometheus.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/config/prometheus.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/prometheus-pushgateway/config/prometheus.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy/docker-compose.yml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy/docker-compose.yml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy/model
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy/model
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy/model/company.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy/model/company.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy/model/company.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy/model/company.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_alice.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_alice.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_alice.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_alice.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_async.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_async.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_async.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_async.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_bob.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_bob.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_bob.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_bob.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_charlie.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_charlie.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_charlie.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_charlie.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_owner.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_owner.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_owner.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/client_owner.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/create_users.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/create_users.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/create_users.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/create_users.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/docker-compose.yml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/docker-compose.yml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/middleware.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/middleware.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/middleware.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/middleware.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/proxy_config.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/proxy_config.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/proxy_config.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/proxy_config.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/data
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/data
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/model
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/model
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/model/datum.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/model/datum.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/model/datum.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/proxy_acl/model/datum.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/quickstart
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/quickstart
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/quickstart/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/quickstart/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/quickstart/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/quickstart/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/quickstart/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/quickstart/docker-compose.yml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/quickstart/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/quickstart/docker-compose.yml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/quickstart/model
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/quickstart/model
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/quickstart/model/company.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/quickstart/model/company.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/quickstart/model/company.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/quickstart/model/company.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/redis-cluster
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/redis-cluster
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/redis-cluster/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/redis-cluster/docker-compose.yml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/redis-cluster/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/redis-cluster/docker-compose.yml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/redis-cluster/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/redis-cluster/job.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/redis-cluster/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/redis-cluster/job.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/test
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/test
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/test/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/test/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/test/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/test/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/README.md
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/README.md
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/.env
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/.env
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/.env
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/.env
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/client.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/docker-compose.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/docker-compose.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/docker-compose.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/docker-compose.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/job.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/job.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/job.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/otel-json-exporter.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/otel-json-exporter.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/otel-json-exporter.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/otel-json-exporter.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/traces
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/traces
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/traces/.gitkeep
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/traces/.gitkeep
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/traces/.gitkeep
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/traces/.gitkeep
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/traces/otel-traces.json
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/traces/otel-traces.json
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/traces/otel-traces.json
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-exporter/traces/otel-traces.json
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/README.md
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/README.md
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/docker-compose.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/docker-compose.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/docker-compose.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/docker-compose.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/config
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/config
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/config/grafana-datasources.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/config/grafana-datasources.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/config/grafana-datasources.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/config/grafana-datasources.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/config/otel-collector.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/config/otel-collector.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/config/otel-collector.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/config/otel-collector.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/config/tempo.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/config/tempo.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/config/tempo.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/config/tempo.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/traces
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/traces
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/traces/.gitkeep
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/traces/.gitkeep
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/traces/.gitkeep
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/traces/.gitkeep
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/traces/otel-traces-old.json
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/traces/otel-traces-old.json
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/traces/otel-traces-old.json
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/traces/otel-traces-old.json
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/traces/otel-traces.json
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/traces/otel-traces.json
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/traces/otel-traces.json
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/tracing/json-post-mortem/traces/otel-traces.json
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/docker-compose.yml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/docker-compose.yml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/sensor.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/sensor.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/sensor.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/sensor.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/subscriber.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/subscriber.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/subscriber.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/subscriber.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/model
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/model
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/model/zenohsubs.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/model/zenohsubs.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/model/zenohsubs.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/model/zenohsubs.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/zenoh_docker
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/zenoh_docker
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/zenoh_docker/zenoh-conf.json5
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/zenoh_docker/zenoh-conf.json5
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/zenoh_docker/zenoh-conf.json5
                path: /home/dcanocan/Desktop/Curro/git/dataclay/examples/zenoh/zenoh_docker/zenoh-conf.json5
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/.gitignore
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/.gitignore
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/.gitignore
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/.gitignore
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/class_index.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/class_index.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/class_index.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/class_index.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/coverage_html_cb_6fb7b396.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/coverage_html_cb_6fb7b396.js
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/coverage_html_cb_6fb7b396.js
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/coverage_html_cb_6fb7b396.js
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/favicon_32_cb_58284776.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/favicon_32_cb_58284776.png
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/favicon_32_cb_58284776.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/favicon_32_cb_58284776.png
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/function_index.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/function_index.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/function_index.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/function_index.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/index.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/index.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/index.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/index.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/keybd_closed_cb_ce680311.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/keybd_closed_cb_ce680311.png
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/keybd_closed_cb_ce680311.png
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/keybd_closed_cb_ce680311.png
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/status.json
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/status.json
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/status.json
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/status.json
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/style_cb_8e611ae1.css
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/style_cb_8e611ae1.css
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/style_cb_8e611ae1.css
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/style_cb_8e611ae1.css
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_1a835f870e64911b___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_1a835f870e64911b___init___py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_1a835f870e64911b___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_1a835f870e64911b___init___py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df___init___py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df___init___py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df___main___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df___main___py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df___main___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df___main___py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_api_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_api_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_api_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_api_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_client_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_client_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_client_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_client_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_kvdata_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_kvdata_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_kvdata_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_kvdata_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_redismanager_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_redismanager_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_redismanager_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_redismanager_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_servicer_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_servicer_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_servicer_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_2d5c529204fc84df_servicer_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_486871809da280e0___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_486871809da280e0___init___py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_486871809da280e0___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_486871809da280e0___init___py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_486871809da280e0_api_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_486871809da280e0_api_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_486871809da280e0_api_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_486871809da280e0_api_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30___init___py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30___init___py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_alien_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_alien_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_alien_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_alien_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_annotated_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_annotated_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_annotated_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_annotated_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_config_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_config_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_config_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_config_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_data_manager_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_data_manager_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_data_manager_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_data_manager_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_dataclay_object_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_dataclay_object_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_dataclay_object_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_dataclay_object_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_event_loop_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_event_loop_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_event_loop_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_event_loop_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_exceptions_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_exceptions_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_exceptions_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_exceptions_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_lock_manager_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_lock_manager_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_lock_manager_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_lock_manager_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_runtime_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_runtime_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_runtime_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_4895dcd879411b30_runtime_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_6acae1d9cb8bd976___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_6acae1d9cb8bd976___init___py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_6acae1d9cb8bd976___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_6acae1d9cb8bd976___init___py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_6acae1d9cb8bd976_base_classes_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_6acae1d9cb8bd976_base_classes_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_6acae1d9cb8bd976_base_classes_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_6acae1d9cb8bd976_base_classes_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_6acae1d9cb8bd976_exceptions_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_6acae1d9cb8bd976_exceptions_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_6acae1d9cb8bd976_exceptions_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_6acae1d9cb8bd976_exceptions_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_6acae1d9cb8bd976_servicer_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_6acae1d9cb8bd976_servicer_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_6acae1d9cb8bd976_servicer_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_6acae1d9cb8bd976_servicer_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_conftest_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_conftest_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_conftest_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_conftest_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_activemethod_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_activemethod_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_activemethod_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_activemethod_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_alias_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_alias_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_alias_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_alias_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_alien_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_alien_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_alien_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_alien_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_client_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_client_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_client_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_client_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_exceptions_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_exceptions_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_exceptions_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_exceptions_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_getstate_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_getstate_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_getstate_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_getstate_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_heapmanager_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_heapmanager_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_heapmanager_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_heapmanager_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_make_persistent_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_make_persistent_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_make_persistent_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_make_persistent_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_move_object_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_move_object_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_move_object_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_move_object_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_new_replica_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_new_replica_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_new_replica_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_new_replica_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_versioning_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_versioning_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_versioning_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_9eb86d367942307b_test_versioning_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0___init___py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0___init___py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0___main___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0___main___py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0___main___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0___main___py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0_api_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0_api_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0_api_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0_api_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0_client_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0_client_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0_client_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0_client_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0_servicer_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0_servicer_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0_servicer_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_b59b085817dfb2b0_servicer_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147___init___py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147___init___py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_alien_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_alien_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_alien_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_alien_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_classes_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_classes_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_classes_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_classes_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_family_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_family_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_family_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_family_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_remote_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_remote_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_remote_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_remote_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_test_remote_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_test_remote_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_test_remote_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_d27396faf8446147_test_remote_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945___init___py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945___init___py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_backend_clients_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_backend_clients_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_backend_clients_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_backend_clients_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_decorators_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_decorators_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_decorators_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_decorators_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_serialization_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_serialization_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_serialization_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_serialization_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_telemetry_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_telemetry_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_telemetry_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_telemetry_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_uuid_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_uuid_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_uuid_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_eb3c392ccaf7c945_uuid_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_f9bb3bf387c1b34d___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_f9bb3bf387c1b34d___init___py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_f9bb3bf387c1b34d___init___py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_f9bb3bf387c1b34d___init___py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_f9bb3bf387c1b34d_api_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_f9bb3bf387c1b34d_api_py.html
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_f9bb3bf387c1b34d_api_py.html
                path: /home/dcanocan/Desktop/Curro/git/dataclay/htmlcov/z_f9bb3bf387c1b34d_api_py.html
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/.gitignore
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/.gitignore
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/.gitignore
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/.gitignore
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/README.md
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/README.md
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/VERSION
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/VERSION
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/VERSION
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/VERSION
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/install_all.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/install_all.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/install_all.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/install_all.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/modulefile.lua
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/modulefile.lua
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/modulefile.lua
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/modulefile.lua
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/sync_all.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/sync_all.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/sync_all.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/sync_all.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/sync_examples.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/sync_examples.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/sync_examples.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/sync_examples.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/bin
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/bin
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/bin/add_network_suffix
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/bin/add_network_suffix
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/bin/add_network_suffix
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/bin/add_network_suffix
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/bin/dataclay_job_v1
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/bin/dataclay_job_v1
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/bin/dataclay_job_v1
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/bin/dataclay_job_v1
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/bin/deploy_dataclay
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/bin/deploy_dataclay
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/bin/deploy_dataclay
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/bin/deploy_dataclay
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/deploy-playbook.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/deploy-playbook.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/deploy-playbook.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/deploy-playbook.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/external_vars.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/external_vars.yml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/external_vars.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/external_vars.yml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/otel-json-exporter.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/otel-json-exporter.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/otel-json-exporter.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/otel-json-exporter.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/otel-json-to-jaeger.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/otel-json-to-jaeger.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/otel-json-to-jaeger.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/otel-json-to-jaeger.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/redis-cluster.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/redis-cluster.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/redis-cluster.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/redis-cluster.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/run-playbook.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/run-playbook.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/run-playbook.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/config/run-playbook.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/install-etcd.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/install-etcd.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/install-etcd.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/install-etcd.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/install-otelcol.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/install-otelcol.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/install-otelcol.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/install-otelcol.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/install-redis.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/install-redis.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/install-redis.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/install-redis.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/install-venv-dataclay.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/install-venv-dataclay.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/install-venv-dataclay.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/install-venv-dataclay.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/job-example.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/job-example.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/job-example.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/job-example.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/json_traces_to_jaeger.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/json_traces_to_jaeger.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/json_traces_to_jaeger.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn4/utils/json_traces_to_jaeger.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/README.md
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/README.md
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/VERSION
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/VERSION
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/VERSION
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/VERSION
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/install_all.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/install_all.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/install_all.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/install_all.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/modulefile.lua
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/modulefile.lua
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/modulefile.lua
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/modulefile.lua
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/sync_all.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/sync_all.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/sync_all.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/sync_all.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/sync_examples.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/sync_examples.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/sync_examples.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/sync_examples.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/bin
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/bin
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/bin/add_network_suffix
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/bin/add_network_suffix
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/bin/add_network_suffix
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/bin/add_network_suffix
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/bin/dataclay_job_v1
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/bin/dataclay_job_v1
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/bin/dataclay_job_v1
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/bin/dataclay_job_v1
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/bin/deploy_dataclay
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/bin/deploy_dataclay
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/bin/deploy_dataclay
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/bin/deploy_dataclay
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/deploy-playbook.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/deploy-playbook.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/deploy-playbook.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/deploy-playbook.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/external_vars.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/external_vars.yml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/external_vars.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/external_vars.yml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/otel-json-exporter.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/otel-json-exporter.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/otel-json-exporter.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/otel-json-exporter.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/redis-cluster.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/redis-cluster.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/redis-cluster.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/redis-cluster.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/run-playbook.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/run-playbook.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/run-playbook.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/config/run-playbook.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils/install-otelcol.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils/install-otelcol.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils/install-otelcol.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils/install-otelcol.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils/install-redis.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils/install-redis.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils/install-redis.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils/install-redis.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils/install-venv-dataclay.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils/install-venv-dataclay.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils/install-venv-dataclay.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils/install-venv-dataclay.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils/job-example.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils/job-example.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils/job-example.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/mn5/utils/job-example.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack/README.md
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack/README.md
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack/README.md
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack/repo.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack/repo.yaml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack/repo.yaml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack/repo.yaml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack/packages
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack/packages
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack/packages/py-dataclay
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack/packages/py-dataclay
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack/packages/py-dataclay/package.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack/packages/py-dataclay/package.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack/packages/py-dataclay/package.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/orchestration/spack/packages/py-dataclay/package.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts
                path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts/count-backend-objects.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts/count-backend-objects.sh
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts/count-backend-objects.sh
                path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts/count-backend-objects.sh
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts/eget
                path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts/eget
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts/eget
                path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts/eget
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts/new-backend
                path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts/new-backend
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts/new-backend
                path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts/new-backend
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts/rget
                path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts/rget
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts/rget
                path: /home/dcanocan/Desktop/Curro/git/dataclay/scripts/rget
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/__init__.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/__init__.py
              finish pytest_pycollect_makemodule --> <Package dataclay> [hook]
            finish pytest_collect_file --> [<Package dataclay>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/__init__.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/__init__.py
              finish pytest_pycollect_makemodule --> <Package backend> [hook]
            finish pytest_collect_file --> [<Package backend>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/client
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/client
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/client/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/client/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/client/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/client/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/client/__init__.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/client/__init__.py
              finish pytest_pycollect_makemodule --> <Package client> [hook]
            finish pytest_collect_file --> [<Package client>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/__init__.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/__init__.py
              finish pytest_pycollect_makemodule --> <Package contrib> [hook]
            finish pytest_collect_file --> [<Package contrib>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dataclay_dummy
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dataclay_dummy
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dataclay_dummy/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dataclay_dummy/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dataclay_dummy/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dataclay_dummy/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dataclay_dummy/__init__.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dataclay_dummy/__init__.py
              finish pytest_pycollect_makemodule --> <Package dataclay_dummy> [hook]
            finish pytest_collect_file --> [<Package dataclay_dummy>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/__init__.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/__init__.py
              finish pytest_pycollect_makemodule --> <Package modeltest> [hook]
            finish pytest_collect_file --> [<Package modeltest>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/control
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/control
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/control/ctl.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/control/ctl.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/control/ctl.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/control/ctl.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/exceptions
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/exceptions
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/__init__.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/__init__.py
              finish pytest_pycollect_makemodule --> <Package metadata> [hook]
            finish pytest_collect_file --> [<Package metadata>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/paraver
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/paraver
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/paraver/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/paraver/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/paraver/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/paraver/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/paraver/__init__.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/paraver/__init__.py
              finish pytest_pycollect_makemodule --> <Package paraver> [hook]
            finish pytest_collect_file --> [<Package paraver>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/__init__.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/__init__.py
              finish pytest_pycollect_makemodule --> <Package proto> [hook]
            finish pytest_collect_file --> [<Package proto>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend/__init__.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend/__init__.py
              finish pytest_pycollect_makemodule --> <Package backend> [hook]
            finish pytest_collect_file --> [<Package backend>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common/__init__.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common/__init__.py
              finish pytest_pycollect_makemodule --> <Package common> [hook]
            finish pytest_collect_file --> [<Package common>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata/__init__.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata/__init__.py
              finish pytest_pycollect_makemodule --> <Package metadata> [hook]
            finish pytest_collect_file --> [<Package metadata>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/__init__.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/__init__.py
              finish pytest_pycollect_makemodule --> <Package proxy> [hook]
            finish pytest_collect_file --> [<Package proxy>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/runtime
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/runtime
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/util
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/util
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/__init__.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/__init__.py
              finish pytest_pycollect_makemodule --> <Package utils> [hook]
            finish pytest_collect_file --> [<Package utils>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/PKG-INFO
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/PKG-INFO
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/PKG-INFO
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/PKG-INFO
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/SOURCES.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/SOURCES.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/SOURCES.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/SOURCES.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/dependency_links.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/dependency_links.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/dependency_links.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/dependency_links.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/entry_points.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/entry_points.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/entry_points.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/entry_points.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/requires.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/requires.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/requires.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/requires.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/top_level.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/top_level.txt
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/top_level.txt
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay.egg-info/top_level.txt
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/__init__.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/__init__.py
              finish pytest_pycollect_makemodule --> <Package storage> [hook]
            finish pytest_collect_file --> [<Package storage>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models/__init__.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models/__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models/__init__.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models/__init__.py
              finish pytest_pycollect_makemodule --> <Package models> [hook]
            finish pytest_collect_file --> [<Package models>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional
            finish pytest_ignore_collect --> None [hook]
          find_module called for: conftest [assertion]
          rewriting conftest file: '/home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/conftest.py' [assertion]
          found cached rewritten pyc for /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/conftest.py [assertion]
          early skip of rewriting module: grpc [assertion]
          early skip of rewriting module: grpc._compression [assertion]
          early skip of rewriting module: grpc._cython [assertion]
          early skip of rewriting module: grpc._cython.cygrpc [assertion]
          early skip of rewriting module: backports_abc [assertion]
          early skip of rewriting module: grpc._cython.logging [assertion]
          early skip of rewriting module: grpc._cython.os [assertion]
          early skip of rewriting module: grpc._cython.sys [assertion]
          early skip of rewriting module: grpc._cython.threading [assertion]
          early skip of rewriting module: grpc._cython.time [assertion]
          early skip of rewriting module: grpc._cython.grpc [assertion]
          early skip of rewriting module: grpc._cython.asyncio [assertion]
          early skip of rewriting module: grpc._cython.grpc [assertion]
          early skip of rewriting module: grpc._observability [assertion]
          early skip of rewriting module: grpc._cython.collections [assertion]
          early skip of rewriting module: grpc._cython.pkgutil [assertion]
          early skip of rewriting module: pkgutil [assertion]
          early skip of rewriting module: grpc._cython.codecs [assertion]
          early skip of rewriting module: grpc._cython.typing [assertion]
          early skip of rewriting module: grpc._cython.grpc [assertion]
          early skip of rewriting module: grpc._cython.atexit [assertion]
          early skip of rewriting module: grpc._cython.errno [assertion]
          early skip of rewriting module: grpc._cython.sys [assertion]
          early skip of rewriting module: grpc._cython.contextvars [assertion]
          early skip of rewriting module: grpc._cython.contextvars [assertion]
          early skip of rewriting module: grpc._cython.os [assertion]
          early skip of rewriting module: grpc._cython.warnings [assertion]
          early skip of rewriting module: grpc._cython.socket [assertion]
          early skip of rewriting module: grpc._cython.enum [assertion]
          early skip of rewriting module: grpc._cython.inspect [assertion]
          early skip of rewriting module: grpc._cython.traceback [assertion]
          early skip of rewriting module: grpc._cython.functools [assertion]
          early skip of rewriting module: grpc._typing [assertion]
          early skip of rewriting module: grpc._runtime_protos [assertion]
          early skip of rewriting module: grpc._grpcio_metadata [assertion]
          early skip of rewriting module: grpc_tools [assertion]
          early skip of rewriting module: grpc_health [assertion]
          early skip of rewriting module: grpc_reflection [assertion]
          early skip of rewriting module: grpc.aio [assertion]
          early skip of rewriting module: grpc.aio._base_call [assertion]
          early skip of rewriting module: grpc.aio._metadata [assertion]
          early skip of rewriting module: grpc.aio._typing [assertion]
          early skip of rewriting module: grpc.aio._base_channel [assertion]
          early skip of rewriting module: grpc.aio._base_server [assertion]
          early skip of rewriting module: grpc.aio._call [assertion]
          early skip of rewriting module: grpc._common [assertion]
          early skip of rewriting module: grpc.aio._channel [assertion]
          early skip of rewriting module: grpc.aio._interceptor [assertion]
          early skip of rewriting module: grpc.aio._utils [assertion]
          early skip of rewriting module: grpc.aio._server [assertion]
          find_module called for: dataclay [assertion]
          early skip of rewriting module: dataclay.client [assertion]
          early skip of rewriting module: dataclay.client.api [assertion]
          early skip of rewriting module: logging.config [assertion]
          early skip of rewriting module: logging.handlers [assertion]
          early skip of rewriting module: queue [assertion]
          early skip of rewriting module: _queue [assertion]
          early skip of rewriting module: socketserver [assertion]
          early skip of rewriting module: dataclay.config [assertion]
          early skip of rewriting module: pydantic [assertion]
          early skip of rewriting module: pydantic._migration [assertion]
          early skip of rewriting module: pydantic.version [assertion]
          early skip of rewriting module: pydantic.errors [assertion]
          early skip of rewriting module: typing_extensions [assertion]
          early skip of rewriting module: pydantic.fields [assertion]
          early skip of rewriting module: annotated_types [assertion]
          early skip of rewriting module: pydantic_core [assertion]
          early skip of rewriting module: pydantic_core._pydantic_core [assertion]
          early skip of rewriting module: pydantic_core.core_schema [assertion]
          early skip of rewriting module: pydantic._internal [assertion]
          early skip of rewriting module: pydantic._internal._validators [assertion]
          early skip of rewriting module: ipaddress [assertion]
          early skip of rewriting module: pydantic.types [assertion]
          early skip of rewriting module: pydantic._internal._core_utils [assertion]
          early skip of rewriting module: pydantic._internal._repr [assertion]
          early skip of rewriting module: pydantic._internal._typing_extra [assertion]
          early skip of rewriting module: pydantic._internal._fields [assertion]
          early skip of rewriting module: pydantic._internal._config [assertion]
          early skip of rewriting module: pydantic.config [assertion]
          early skip of rewriting module: pydantic.warnings [assertion]
          early skip of rewriting module: pydantic._internal._internal_dataclass [assertion]
          early skip of rewriting module: pydantic._internal._utils [assertion]
          early skip of rewriting module: pydantic.annotated_handlers [assertion]
          early skip of rewriting module: pydantic.json_schema [assertion]
          early skip of rewriting module: pydantic._internal._core_metadata [assertion]
          early skip of rewriting module: pydantic._internal._decorators [assertion]
          early skip of rewriting module: pydantic._internal._mock_val_ser [assertion]
          early skip of rewriting module: pydantic._internal._schema_generation_shared [assertion]
          early skip of rewriting module: pydantic._internal._generics [assertion]
          early skip of rewriting module: pydantic._internal._forward_ref [assertion]
          early skip of rewriting module: pydantic_settings [assertion]
          early skip of rewriting module: pydantic_settings.main [assertion]
          early skip of rewriting module: pydantic.main [assertion]
          early skip of rewriting module: pydantic._internal._model_construction [assertion]
          early skip of rewriting module: pydantic.plugin [assertion]
          early skip of rewriting module: pydantic.plugin._schema_validator [assertion]
          early skip of rewriting module: pydantic._internal._generate_schema [assertion]
          early skip of rewriting module: pydantic._internal._discriminated_union [assertion]
          early skip of rewriting module: pydantic._internal._known_annotated_metadata [assertion]
          early skip of rewriting module: pydantic._internal._validate_call [assertion]
          early skip of rewriting module: pydantic_settings.sources [assertion]
          early skip of rewriting module: dotenv [assertion]
          early skip of rewriting module: dotenv.main [assertion]
          early skip of rewriting module: dotenv.parser [assertion]
          early skip of rewriting module: dotenv.variables [assertion]
          early skip of rewriting module: pydantic_settings.utils [assertion]
          early skip of rewriting module: pydantic.plugin._loader [assertion]
          early skip of rewriting module: pydantic_settings.version [assertion]
          early skip of rewriting module: encodings.idna [assertion]
          early skip of rewriting module: stringprep [assertion]
          early skip of rewriting module: pydantic._internal._std_types_schema [assertion]
          early skip of rewriting module: dataclay.event_loop [assertion]
          early skip of rewriting module: dataclay.proxy [assertion]
          early skip of rewriting module: jwt [assertion]
          early skip of rewriting module: jwt.api_jwk [assertion]
          early skip of rewriting module: jwt.algorithms [assertion]
          early skip of rewriting module: hmac [assertion]
          early skip of rewriting module: jwt.exceptions [assertion]
          early skip of rewriting module: jwt.types [assertion]
          early skip of rewriting module: jwt.utils [assertion]
          early skip of rewriting module: cryptography [assertion]
          early skip of rewriting module: cryptography.__about__ [assertion]
          early skip of rewriting module: cryptography.hazmat [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives.asymmetric [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives.asymmetric.ec [assertion]
          early skip of rewriting module: cryptography.utils [assertion]
          early skip of rewriting module: cryptography.hazmat._oid [assertion]
          early skip of rewriting module: cryptography.hazmat.bindings [assertion]
          early skip of rewriting module: cryptography.hazmat.bindings._rust [assertion]
          early skip of rewriting module: _cffi_backend [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives.hashes [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives._serialization [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives.asymmetric.utils [assertion]
          early skip of rewriting module: cryptography.exceptions [assertion]
          early skip of rewriting module: cryptography.hazmat.backends [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives.asymmetric.padding [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives._asymmetric [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives.asymmetric.rsa [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives.asymmetric.ed448 [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives.asymmetric.ed25519 [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives.serialization [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives.serialization.base [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives.serialization.ssh [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives.asymmetric.dsa [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives.ciphers [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives._cipheralgorithm [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives.ciphers.base [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives.ciphers.modes [assertion]
          early skip of rewriting module: cryptography.hazmat.primitives.ciphers.algorithms [assertion]
          early skip of rewriting module: bcrypt [assertion]
          early skip of rewriting module: bcrypt._bcrypt [assertion]
          early skip of rewriting module: jwt.api_jws [assertion]
          early skip of rewriting module: jwt.warnings [assertion]
          early skip of rewriting module: jwt.api_jwt [assertion]
          early skip of rewriting module: jwt.jwks_client [assertion]
          early skip of rewriting module: urllib.request [assertion]
          early skip of rewriting module: http [assertion]
          early skip of rewriting module: http.client [assertion]
          early skip of rewriting module: urllib.error [assertion]
          early skip of rewriting module: urllib.response [assertion]
          early skip of rewriting module: jwt.jwk_set_cache [assertion]
          early skip of rewriting module: dataclay.proxy.servicer [assertion]
          early skip of rewriting module: dataclay.metadata [assertion]
          early skip of rewriting module: dataclay.metadata.api [assertion]
          early skip of rewriting module: dataclay.exceptions [assertion]
          early skip of rewriting module: dataclay.metadata.kvdata [assertion]
          early skip of rewriting module: google [assertion]
          early skip of rewriting module: google.protobuf [assertion]
          early skip of rewriting module: google.protobuf.json_format [assertion]
          early skip of rewriting module: google.protobuf.internal [assertion]
          early skip of rewriting module: google.protobuf.internal.type_checkers [assertion]
          early skip of rewriting module: ctypes [assertion]
          early skip of rewriting module: _ctypes [assertion]
          early skip of rewriting module: ctypes._endian [assertion]
          early skip of rewriting module: google.protobuf.internal.decoder [assertion]
          early skip of rewriting module: google.protobuf.internal.containers [assertion]
          early skip of rewriting module: google.protobuf.internal.encoder [assertion]
          early skip of rewriting module: google.protobuf.internal.wire_format [assertion]
          early skip of rewriting module: google.protobuf.descriptor [assertion]
          early skip of rewriting module: google.protobuf.internal.api_implementation [assertion]
          early skip of rewriting module: google.protobuf.internal._api_implementation [assertion]
          early skip of rewriting module: google._upb [assertion]
          early skip of rewriting module: google._upb._message [assertion]
          early skip of rewriting module: google.protobuf.message [assertion]
          early skip of rewriting module: google.protobuf.internal.enum_type_wrapper [assertion]
          early skip of rewriting module: google.protobuf.enable_deterministic_proto_serialization [assertion]
          early skip of rewriting module: google.protobuf.message_factory [assertion]
          early skip of rewriting module: google.protobuf.descriptor_pool [assertion]
          early skip of rewriting module: google.protobuf.descriptor_database [assertion]
          early skip of rewriting module: google.protobuf.text_encoding [assertion]
          early skip of rewriting module: google.protobuf.internal.python_message [assertion]
          early skip of rewriting module: google.protobuf.text_format [assertion]
          early skip of rewriting module: encodings.raw_unicode_escape [assertion]
          early skip of rewriting module: encodings.unicode_escape [assertion]
          early skip of rewriting module: google.protobuf.unknown_fields [assertion]
          early skip of rewriting module: google.protobuf.internal.extension_dict [assertion]
          early skip of rewriting module: google.protobuf.internal.message_listener [assertion]
          early skip of rewriting module: google.protobuf.internal.well_known_types [assertion]
          early skip of rewriting module: google.protobuf.internal.field_mask [assertion]
          early skip of rewriting module: google.protobuf.pyext [assertion]
          early skip of rewriting module: google.protobuf.pyext.cpp_message [assertion]
          early skip of rewriting module: google.protobuf.symbol_database [assertion]
          early skip of rewriting module: pydantic.functional_validators [assertion]
          early skip of rewriting module: dataclay.proto [assertion]
          early skip of rewriting module: dataclay.proto.common [assertion]
          early skip of rewriting module: dataclay.proto.common.common_pb2 [assertion]
          early skip of rewriting module: google.protobuf.internal.builder [assertion]
          early skip of rewriting module: google.protobuf.reflection [assertion]
          early skip of rewriting module: dataclay.metadata.redismanager [assertion]
          early skip of rewriting module: redis [assertion]
          early skip of rewriting module: redis.asyncio [assertion]
          early skip of rewriting module: redis.asyncio.client [assertion]
          early skip of rewriting module: redis._parsers [assertion]
          early skip of rewriting module: redis._parsers.base [assertion]
          early skip of rewriting module: async_timeout [assertion]
          early skip of rewriting module: redis.exceptions [assertion]
          early skip of rewriting module: redis.typing [assertion]
          early skip of rewriting module: redis.compat [assertion]
          early skip of rewriting module: redis._parsers.encoders [assertion]
          early skip of rewriting module: redis._parsers.socket [assertion]
          early skip of rewriting module: redis.utils [assertion]
          early skip of rewriting module: hiredis [assertion]
          early skip of rewriting module: hiredis.hiredis [assertion]
          early skip of rewriting module: hiredis.version [assertion]
          early skip of rewriting module: redis._parsers.commands [assertion]
          early skip of rewriting module: redis._parsers.hiredis [assertion]
          early skip of rewriting module: redis._parsers.resp2 [assertion]
          early skip of rewriting module: redis._parsers.resp3 [assertion]
          early skip of rewriting module: redis._parsers.helpers [assertion]
          early skip of rewriting module: redis.asyncio.connection [assertion]
          early skip of rewriting module: redis.asyncio.retry [assertion]
          early skip of rewriting module: redis.backoff [assertion]
          early skip of rewriting module: redis.connection [assertion]
          early skip of rewriting module: redis.credentials [assertion]
          early skip of rewriting module: redis.retry [assertion]
          early skip of rewriting module: redis.asyncio.lock [assertion]
          early skip of rewriting module: redis.client [assertion]
          early skip of rewriting module: redis.commands [assertion]
          early skip of rewriting module: redis.commands.cluster [assertion]
          early skip of rewriting module: redis.crc [assertion]
          early skip of rewriting module: redis.commands.core [assertion]
          early skip of rewriting module: redis.commands.helpers [assertion]
          early skip of rewriting module: redis.commands.redismodules [assertion]
          early skip of rewriting module: redis.commands.sentinel [assertion]
          early skip of rewriting module: redis.lock [assertion]
          early skip of rewriting module: redis.asyncio.cluster [assertion]
          early skip of rewriting module: redis.cluster [assertion]
          early skip of rewriting module: redis.asyncio.sentinel [assertion]
          early skip of rewriting module: redis.asyncio.utils [assertion]
          early skip of rewriting module: redis.sentinel [assertion]
          early skip of rewriting module: dataclay.utils [assertion]
          early skip of rewriting module: dataclay.alien [assertion]
          early skip of rewriting module: dataclay.dataclay_object [assertion]
          early skip of rewriting module: dataclay.annotated [assertion]
          early skip of rewriting module: dataclay.utils.telemetry [assertion]
          early skip of rewriting module: opentelemetry [assertion]
          early skip of rewriting module: opentelemetry.trace [assertion]
          early skip of rewriting module: deprecated [assertion]
          early skip of rewriting module: deprecated.classic [assertion]
          early skip of rewriting module: wrapt [assertion]
          early skip of rewriting module: wrapt.__wrapt__ [assertion]
          early skip of rewriting module: wrapt.wrappers [assertion]
          early skip of rewriting module: wrapt._wrappers [assertion]
          early skip of rewriting module: wrapt.patches [assertion]
          early skip of rewriting module: wrapt.weakrefs [assertion]
          early skip of rewriting module: wrapt.decorators [assertion]
          early skip of rewriting module: wrapt.arguments [assertion]
          early skip of rewriting module: wrapt.importer [assertion]
          early skip of rewriting module: opentelemetry.context [assertion]
          early skip of rewriting module: opentelemetry.context.context [assertion]
          early skip of rewriting module: opentelemetry.environment_variables [assertion]
          early skip of rewriting module: opentelemetry.util [assertion]
          early skip of rewriting module: opentelemetry.util._importlib_metadata [assertion]
          early skip of rewriting module: importlib_metadata [assertion]
          early skip of rewriting module: zipp [assertion]
          early skip of rewriting module: zipp.py310compat [assertion]
          early skip of rewriting module: zipp.glob [assertion]
          early skip of rewriting module: importlib_metadata._adapters [assertion]
          early skip of rewriting module: importlib_metadata._text [assertion]
          early skip of rewriting module: importlib_metadata._functools [assertion]
          early skip of rewriting module: importlib_metadata._compat [assertion]
          early skip of rewriting module: importlib_metadata._meta [assertion]
          early skip of rewriting module: importlib_metadata._py39compat [assertion]
          early skip of rewriting module: importlib_metadata._collections [assertion]
          early skip of rewriting module: importlib_metadata._itertools [assertion]
          early skip of rewriting module: opentelemetry.attributes [assertion]
          early skip of rewriting module: opentelemetry.util.types [assertion]
          early skip of rewriting module: opentelemetry.trace.propagation [assertion]
          early skip of rewriting module: opentelemetry.trace.span [assertion]
          early skip of rewriting module: opentelemetry.trace.status [assertion]
          early skip of rewriting module: opentelemetry.util._once [assertion]
          early skip of rewriting module: opentelemetry.util._providers [assertion]
          early skip of rewriting module: dataclay.proto.backend [assertion]
          early skip of rewriting module: dataclay.proto.backend.backend_pb2_grpc [assertion]
          early skip of rewriting module: dataclay.proto.backend.backend_pb2 [assertion]
          early skip of rewriting module: google.protobuf.empty_pb2 [assertion]
          early skip of rewriting module: google.protobuf.wrappers_pb2 [assertion]
          early skip of rewriting module: grpc._utilities [assertion]
          early skip of rewriting module: dataclay.proto.metadata [assertion]
          early skip of rewriting module: dataclay.proto.metadata.metadata_pb2_grpc [assertion]
          early skip of rewriting module: dataclay.proto.metadata.metadata_pb2 [assertion]
          early skip of rewriting module: dataclay.proxy.base_classes [assertion]
          early skip of rewriting module: dataclay.proxy.exceptions [assertion]
          early skip of rewriting module: dataclay.runtime [assertion]
          early skip of rewriting module: dataclay.data_manager [assertion]
          early skip of rewriting module: psutil [assertion]
          early skip of rewriting module: pwd [assertion]
          early skip of rewriting module: psutil._common [assertion]
          early skip of rewriting module: psutil._compat [assertion]
          early skip of rewriting module: psutil._pslinux [assertion]
          early skip of rewriting module: psutil._psposix [assertion]
          early skip of rewriting module: psutil._psutil_linux [assertion]
          early skip of rewriting module: psutil._psutil_posix [assertion]
          early skip of rewriting module: resource [assertion]
          early skip of rewriting module: dataclay.lock_manager [assertion]
          early skip of rewriting module: aiorwlock [assertion]
          early skip of rewriting module: dataclay.utils.serialization [assertion]
          early skip of rewriting module: dataclay.metadata.client [assertion]
          early skip of rewriting module: dataclay.utils.decorators [assertion]
          early skip of rewriting module: dataclay.utils.uuid [assertion]
          early skip of rewriting module: dataclay.utils.backend_clients [assertion]
          early skip of rewriting module: dataclay.backend [assertion]
          early skip of rewriting module: dataclay.backend.client [assertion]
          loading conftestmodule <module 'conftest' from '/home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/conftest.py'> [pluginmanage]
            pytest_plugin_registered [hook]
                plugin: <module 'conftest' from '/home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/conftest.py'>
                manager: <_pytest.config.PytestPluginManager object at 0x749aee007e50>
            finish pytest_plugin_registered --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/conftest.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/conftest.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/conftest.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/conftest.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/docker-compose.yml
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/docker-compose.yml
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/docker-compose.yml
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_activemethod.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_activemethod.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_activemethod.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_activemethod.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_activemethod.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_activemethod.py
              finish pytest_pycollect_makemodule --> <Module tests/functional/test_activemethod.py> [hook]
            finish pytest_collect_file --> [<Module tests/functional/test_activemethod.py>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_alias.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_alias.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_alias.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_alias.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_alias.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_alias.py
              finish pytest_pycollect_makemodule --> <Module tests/functional/test_alias.py> [hook]
            finish pytest_collect_file --> [<Module tests/functional/test_alias.py>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_alien.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_alien.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_alien.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_alien.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_alien.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_alien.py
              finish pytest_pycollect_makemodule --> <Module tests/functional/test_alien.py> [hook]
            finish pytest_collect_file --> [<Module tests/functional/test_alien.py>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_client.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_client.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_client.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_client.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_client.py
              finish pytest_pycollect_makemodule --> <Module tests/functional/test_client.py> [hook]
            finish pytest_collect_file --> [<Module tests/functional/test_client.py>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_exceptions.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_exceptions.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_exceptions.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_exceptions.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_exceptions.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_exceptions.py
              finish pytest_pycollect_makemodule --> <Module tests/functional/test_exceptions.py> [hook]
            finish pytest_collect_file --> [<Module tests/functional/test_exceptions.py>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_getstate.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_getstate.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_getstate.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_getstate.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_getstate.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_getstate.py
              finish pytest_pycollect_makemodule --> <Module tests/functional/test_getstate.py> [hook]
            finish pytest_collect_file --> [<Module tests/functional/test_getstate.py>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_heapmanager.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_heapmanager.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_heapmanager.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_heapmanager.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_heapmanager.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_heapmanager.py
              finish pytest_pycollect_makemodule --> <Module tests/functional/test_heapmanager.py> [hook]
            finish pytest_collect_file --> [<Module tests/functional/test_heapmanager.py>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_make_persistent.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_make_persistent.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_make_persistent.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_make_persistent.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_make_persistent.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_make_persistent.py
              finish pytest_pycollect_makemodule --> <Module tests/functional/test_make_persistent.py> [hook]
            finish pytest_collect_file --> [<Module tests/functional/test_make_persistent.py>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_move_object.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_move_object.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_move_object.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_move_object.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_move_object.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_move_object.py
              finish pytest_pycollect_makemodule --> <Module tests/functional/test_move_object.py> [hook]
            finish pytest_collect_file --> [<Module tests/functional/test_move_object.py>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_new_replica.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_new_replica.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_new_replica.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_new_replica.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_new_replica.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_new_replica.py
              finish pytest_pycollect_makemodule --> <Module tests/functional/test_new_replica.py> [hook]
            finish pytest_collect_file --> [<Module tests/functional/test_new_replica.py>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_versioning.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_versioning.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_versioning.py
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_versioning.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_versioning.py
                  path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_versioning.py
              finish pytest_pycollect_makemodule --> <Module tests/functional/test_versioning.py> [hook]
            finish pytest_collect_file --> [<Module tests/functional/test_versioning.py>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/proxy
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/proxy
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/proxy/proxy_non_owner
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/proxy/proxy_non_owner
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/proxy/proxy_owner
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/proxy/proxy_owner
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/unit
                path: /home/dcanocan/Desktop/Curro/git/dataclay/tests/unit
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/venv
                path: /home/dcanocan/Desktop/Curro/git/dataclay/venv
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x749aee007f40>
                collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/venv.deploy
                path: /home/dcanocan/Desktop/Curro/git/dataclay/venv.deploy
            finish pytest_ignore_collect --> True [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=27 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=27 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Package dataclay> [collection]
      pytest_collectstart [hook]
          collector: <Package dataclay>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package dataclay>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/alien.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/alien.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package dataclay>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/alien.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/alien.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/annotated.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/annotated.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package dataclay>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/annotated.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/annotated.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/config.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/config.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package dataclay>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/config.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/config.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/data_manager.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/data_manager.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package dataclay>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/data_manager.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/data_manager.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/dataclay_object.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/dataclay_object.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package dataclay>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/dataclay_object.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/dataclay_object.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/event_loop.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/event_loop.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package dataclay>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/event_loop.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/event_loop.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/exceptions.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/exceptions.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package dataclay>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/exceptions.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/exceptions.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/lock_manager.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/lock_manager.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package dataclay>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/lock_manager.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/lock_manager.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/runtime.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/runtime.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package dataclay>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/runtime.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/runtime.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/__init__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/client
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/client
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/client/__init__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/client/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/__init__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dataclay_dummy
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dataclay_dummy
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/control
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/control
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/control/ctl.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/control/ctl.py
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/exceptions
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/exceptions
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/__init__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/paraver
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/paraver
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/paraver/__init__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/paraver/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/__init__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/__init__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/runtime
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/runtime
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/util
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/util
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/__init__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/__init__.py
        finish pytest_ignore_collect --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/dataclay/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/dataclay/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package backend> [collection]
      pytest_collectstart [hook]
          collector: <Package backend>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package backend>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/__main__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/__main__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package backend>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/__main__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/__main__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/api.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/api.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package backend>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/api.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/api.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/client.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/client.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package backend>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/client.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/client.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/servicer.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/servicer.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package backend>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/servicer.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/backend/servicer.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/dataclay/backend/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/dataclay/backend/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package client> [collection]
      pytest_collectstart [hook]
          collector: <Package client>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package client>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/client/api.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/client/api.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package client>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/client/api.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/client/api.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/dataclay/client/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/dataclay/client/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package contrib> [collection]
      pytest_collectstart [hook]
          collector: <Package contrib>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package contrib>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/collections.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/collections.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package contrib>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/collections.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/collections.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dummy_pycompss.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dummy_pycompss.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package contrib>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dummy_pycompss.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dummy_pycompss.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/kafka.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/kafka.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package contrib>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/kafka.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/kafka.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/mqtt.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/mqtt.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package contrib>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/mqtt.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/mqtt.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/nvm.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/nvm.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package contrib>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/nvm.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/nvm.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/splitting.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/splitting.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package contrib>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/splitting.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/splitting.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/synchronization.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/synchronization.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package contrib>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/synchronization.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/synchronization.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/zenoh_module.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/zenoh_module.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package contrib>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/zenoh_module.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/zenoh_module.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dataclay_dummy
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dataclay_dummy
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dataclay_dummy/__init__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/dataclay_dummy/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/__init__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/__init__.py
        finish pytest_ignore_collect --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/dataclay/contrib/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/dataclay/contrib/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package dataclay_dummy> [collection]
      pytest_collectstart [hook]
          collector: <Package dataclay_dummy>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package dataclay_dummy>
      finish pytest_make_collect_report --> <CollectReport 'src/dataclay/contrib/dataclay_dummy/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/dataclay/contrib/dataclay_dummy/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package modeltest> [collection]
      pytest_collectstart [hook]
          collector: <Package modeltest>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package modeltest>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/alien.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/alien.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package modeltest>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/alien.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/alien.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/classes.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/classes.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package modeltest>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/classes.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/classes.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/compss.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/compss.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package modeltest>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/compss.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/compss.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/family.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/family.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package modeltest>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/family.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/family.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/matrix.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/matrix.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package modeltest>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/matrix.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/matrix.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/remote.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/remote.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package modeltest>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/remote.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/contrib/modeltest/remote.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/dataclay/contrib/modeltest/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/dataclay/contrib/modeltest/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package metadata> [collection]
      pytest_collectstart [hook]
          collector: <Package metadata>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package metadata>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/__main__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/__main__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package metadata>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/__main__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/__main__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/api.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/api.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package metadata>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/api.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/api.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/client.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/client.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package metadata>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/client.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/client.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/kvdata.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/kvdata.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package metadata>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/kvdata.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/kvdata.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/redismanager.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/redismanager.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package metadata>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/redismanager.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/redismanager.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/servicer.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/servicer.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package metadata>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/servicer.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/metadata/servicer.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/dataclay/metadata/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/dataclay/metadata/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package paraver> [collection]
      pytest_collectstart [hook]
          collector: <Package paraver>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package paraver>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/paraver/__main__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/paraver/__main__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package paraver>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/paraver/__main__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/paraver/__main__.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/dataclay/paraver/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/dataclay/paraver/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package proto> [collection]
      pytest_collectstart [hook]
          collector: <Package proto>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package proto>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend/__init__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common/__init__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata/__init__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata/__init__.py
        finish pytest_ignore_collect --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/dataclay/proto/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/dataclay/proto/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package backend> [collection]
      pytest_collectstart [hook]
          collector: <Package backend>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package backend>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend/backend_pb2.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend/backend_pb2.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package backend>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend/backend_pb2.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend/backend_pb2.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend/backend_pb2_grpc.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend/backend_pb2_grpc.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package backend>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend/backend_pb2_grpc.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/backend/backend_pb2_grpc.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/dataclay/proto/backend/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/dataclay/proto/backend/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package common> [collection]
      pytest_collectstart [hook]
          collector: <Package common>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package common>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common/common_pb2.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common/common_pb2.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package common>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common/common_pb2.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common/common_pb2.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common/common_pb2_grpc.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common/common_pb2_grpc.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package common>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common/common_pb2_grpc.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/common/common_pb2_grpc.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/dataclay/proto/common/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/dataclay/proto/common/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package metadata> [collection]
      pytest_collectstart [hook]
          collector: <Package metadata>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package metadata>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata/metadata_pb2.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata/metadata_pb2.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package metadata>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata/metadata_pb2.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata/metadata_pb2.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata/metadata_pb2_grpc.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata/metadata_pb2_grpc.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package metadata>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata/metadata_pb2_grpc.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proto/metadata/metadata_pb2_grpc.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/dataclay/proto/metadata/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/dataclay/proto/metadata/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package proxy> [collection]
      pytest_collectstart [hook]
          collector: <Package proxy>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package proxy>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/__main__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/__main__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package proxy>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/__main__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/__main__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/base_classes.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/base_classes.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package proxy>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/base_classes.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/base_classes.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/exceptions.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/exceptions.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package proxy>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/exceptions.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/exceptions.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/servicer.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/servicer.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package proxy>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/servicer.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/proxy/servicer.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/dataclay/proxy/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/dataclay/proxy/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package utils> [collection]
      pytest_collectstart [hook]
          collector: <Package utils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package utils>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/backend_clients.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/backend_clients.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package utils>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/backend_clients.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/backend_clients.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/decorators.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/decorators.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package utils>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/decorators.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/decorators.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/metrics.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/metrics.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package utils>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/metrics.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/metrics.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/serialization.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/serialization.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package utils>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/serialization.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/serialization.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/telemetry.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/telemetry.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package utils>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/telemetry.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/telemetry.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/uuid.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/uuid.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package utils>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/uuid.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/utils/uuid.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/dataclay/utils/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/dataclay/utils/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package storage> [collection]
      pytest_collectstart [hook]
          collector: <Package storage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package storage>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/api.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/api.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package storage>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/api.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/api.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models/__init__.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models/__init__.py
        finish pytest_ignore_collect --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/storage/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/storage/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package models> [collection]
      pytest_collectstart [hook]
          collector: <Package models>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package models>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models/storagedict.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models/storagedict.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package models>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models/storagedict.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models/storagedict.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            collection_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models/storagelist.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models/storagelist.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package models>
            file_path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models/storagelist.py
            path: /home/dcanocan/Desktop/Curro/git/dataclay/src/storage/models/storagelist.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/storage/models/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/storage/models/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests/functional/test_activemethod.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests/functional/test_activemethod.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests/functional/test_activemethod.py>
      find_module called for: test_activemethod [assertion]
      matched test file '/home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_activemethod.py' [assertion]
      found cached rewritten pyc for /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_activemethod.py [assertion]
      early skip of rewriting module: dataclay.contrib [assertion]
      early skip of rewriting module: dataclay.contrib.modeltest [assertion]
      early skip of rewriting module: dataclay.contrib.modeltest.family [assertion]
      early skip of rewriting module: dataclay.contrib.modeltest.remote [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_activemethod.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_activemethod.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_activemethod.py>
            name: pytest
            obj: <module 'pytest' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_activemethod.py>
            name: Dog
            obj: <class 'dataclay.contrib.modeltest.family.Dog'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_activemethod.py>
            name: Family
            obj: <class 'dataclay.contrib.modeltest.family.Family'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_activemethod.py>
            name: Person
            obj: <class 'dataclay.contrib.modeltest.family.Person'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_activemethod.py>
            name: ActivemethodTestClass
            obj: <class 'dataclay.contrib.modeltest.remote.ActivemethodTestClass'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_activemethod.py>
            name: test_activemethod_argument_make_persistent
            obj: <function test_activemethod_argument_make_persistent at 0x749aeaec1d80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaeabe80>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_activemethod_argument_make_persistent>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_activemethod.py>
            name: test_activemethod_persistent_argument
            obj: <function test_activemethod_persistent_argument at 0x749aeaec31c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaeabeb0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_activemethod_persistent_argument>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_activemethod.py>
            name: test_activemethod_defined_properties
            obj: <function test_activemethod_defined_properties at 0x749aeaec39a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaeabee0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_activemethod_defined_properties>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_activemethod.py>
            name: test_activemethod_non_defined_properties
            obj: <function test_activemethod_non_defined_properties at 0x749aeaec3a30>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaeabe80>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_activemethod_non_defined_properties>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_activemethod.py>
            name: test_activemethod_inner_make_persistent
            obj: <function test_activemethod_inner_make_persistent at 0x749aeaec3ac0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaeabeb0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_activemethod_inner_make_persistent>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_activemethod.py>
            name: test_remote_activemethod
            obj: <function test_remote_activemethod at 0x749aeaec3b50>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaeabee0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_remote_activemethod>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_activemethod.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaec1a20>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_activemethod.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaec13f0>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/functional/test_activemethod.py' lenresult=6 outcome='passed'> [hook]
    genitems <Function test_activemethod_argument_make_persistent> [collection]
      pytest_itemcollected [hook]
          item: <Function test_activemethod_argument_make_persistent>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_activemethod_persistent_argument> [collection]
      pytest_itemcollected [hook]
          item: <Function test_activemethod_persistent_argument>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_activemethod_defined_properties> [collection]
      pytest_itemcollected [hook]
          item: <Function test_activemethod_defined_properties>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_activemethod_non_defined_properties> [collection]
      pytest_itemcollected [hook]
          item: <Function test_activemethod_non_defined_properties>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_activemethod_inner_make_persistent> [collection]
      pytest_itemcollected [hook]
          item: <Function test_activemethod_inner_make_persistent>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_remote_activemethod> [collection]
      pytest_itemcollected [hook]
          item: <Function test_remote_activemethod>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/functional/test_activemethod.py' lenresult=6 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests/functional/test_alias.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests/functional/test_alias.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests/functional/test_alias.py>
      find_module called for: test_alias [assertion]
      matched test file '/home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_alias.py' [assertion]
      found cached rewritten pyc for /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_alias.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: pytest
            obj: <module 'pytest' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: Family
            obj: <class 'dataclay.contrib.modeltest.family.Family'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: Person
            obj: <class 'dataclay.contrib.modeltest.family.Person'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: DataClayException
            obj: <class 'dataclay.exceptions.DataClayException'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: test_get_by_alias
            obj: <function test_get_by_alias at 0x749aeaee4700>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaedd5a0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get_by_alias>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: test_get_by_alias_async
            obj: <function test_get_by_alias_async at 0x749aeaee4790>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaedd540>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_get_by_alias_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: test_delete_alias
            obj: <function test_delete_alias at 0x749aeaee4820>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaedd570>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_delete_alias>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: test_delete_alias_async
            obj: <function test_delete_alias_async at 0x749aeaee48b0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaedd5a0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_delete_alias_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: test_same_alias
            obj: <function test_same_alias at 0x749aeaee4940>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaedd570>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_same_alias>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: test_same_alias_async
            obj: <function test_same_alias_async at 0x749aeaee49d0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaedd4e0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_same_alias_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: test_add_alias
            obj: <function test_add_alias at 0x749aeaee4a60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaedd510>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_add_alias>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: test_add_alias_async
            obj: <function test_add_alias_async at 0x749aeaee4af0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaedd570>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_add_alias_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: test_get_aliases
            obj: <function test_get_aliases at 0x749aeaee4b80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaedd4e0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get_aliases>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: test_get_aliases_async
            obj: <function test_get_aliases_async at 0x749aeaee4c10>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaedd510>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_get_aliases_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaec3c70>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alias.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaec1510>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/functional/test_alias.py' lenresult=10 outcome='passed'> [hook]
    genitems <Function test_get_by_alias> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get_by_alias>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_get_by_alias_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_get_by_alias_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_delete_alias> [collection]
      pytest_itemcollected [hook]
          item: <Function test_delete_alias>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_delete_alias_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_delete_alias_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_same_alias> [collection]
      pytest_itemcollected [hook]
          item: <Function test_same_alias>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_same_alias_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_same_alias_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_add_alias> [collection]
      pytest_itemcollected [hook]
          item: <Function test_add_alias>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_add_alias_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_add_alias_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_get_aliases> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get_aliases>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_get_aliases_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_get_aliases_async>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/functional/test_alias.py' lenresult=10 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests/functional/test_alien.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests/functional/test_alien.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests/functional/test_alien.py>
      find_module called for: test_alien [assertion]
      matched test file '/home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_alien.py' [assertion]
      found cached rewritten pyc for /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_alien.py [assertion]
      early skip of rewriting module: dataclay.contrib.modeltest.alien [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alien.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alien.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alien.py>
            name: datetime
            obj: <class 'datetime.datetime'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alien.py>
            name: pytest
            obj: <module 'pytest' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alien.py>
            name: AlienDataClayObject
            obj: <class 'dataclay.alien.AlienDataClayObject'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alien.py>
            name: DataClayObject
            obj: <class 'dataclay.dataclay_object.DataClayObject'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alien.py>
            name: Dog
            obj: <class 'dataclay.contrib.modeltest.alien.Dog'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alien.py>
            name: Person
            obj: <class 'dataclay.contrib.modeltest.alien.Person'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alien.py>
            name: test_alien_builtin
            obj: <function test_alien_builtin at 0x749aeaee5240>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaedf730>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_alien_builtin>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alien.py>
            name: test_alien_proxy_classes
            obj: <function test_alien_proxy_classes at 0x749aeaee5360>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaedf790>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_alien_proxy_classes>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alien.py>
            name: test_alien_python_class
            obj: <function test_alien_python_class at 0x749aeaee5b40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaedf7c0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_alien_python_class>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alien.py>
            name: test_alien_pydantic_model
            obj: <function test_alien_pydantic_model at 0x749aeaee5bd0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaedf730>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_alien_pydantic_model>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alien.py>
            name: test_alien_getsetdelitem
            obj: <function test_alien_getsetdelitem at 0x749aeaee5c60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaedf790>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_alien_getsetdelitem>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alien.py>
            name: test_alien_getsetdelattr
            obj: <function test_alien_getsetdelattr at 0x749aeaee5cf0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaedf7c0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_alien_getsetdelattr>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alien.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaee4dc0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_alien.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaec09d0>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/functional/test_alien.py' lenresult=6 outcome='passed'> [hook]
    genitems <Function test_alien_builtin> [collection]
      pytest_itemcollected [hook]
          item: <Function test_alien_builtin>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_alien_proxy_classes> [collection]
      pytest_itemcollected [hook]
          item: <Function test_alien_proxy_classes>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_alien_python_class> [collection]
      pytest_itemcollected [hook]
          item: <Function test_alien_python_class>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_alien_pydantic_model> [collection]
      pytest_itemcollected [hook]
          item: <Function test_alien_pydantic_model>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_alien_getsetdelitem> [collection]
      pytest_itemcollected [hook]
          item: <Function test_alien_getsetdelitem>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_alien_getsetdelattr> [collection]
      pytest_itemcollected [hook]
          item: <Function test_alien_getsetdelattr>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/functional/test_alien.py' lenresult=6 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests/functional/test_client.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests/functional/test_client.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests/functional/test_client.py>
      find_module called for: test_client [assertion]
      matched test file '/home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_client.py' [assertion]
      found cached rewritten pyc for /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_client.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_client.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_client.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_client.py>
            name: pytest
            obj: <module 'pytest' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_client.py>
            name: dataclay
            obj: <module 'dataclay' from '/home/dcanocan/Desktop/Curro/git/dataclay/src/dataclay/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_client.py>
            name: Client
            obj: <class 'dataclay.client.api.Client'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_client.py>
            name: test_client_settings
            obj: <function test_client_settings at 0x749aeaee5510>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaefc7c0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_client_settings>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_client.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaee5a20>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_client.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaec16c0>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/functional/test_client.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_client_settings> [collection]
      pytest_itemcollected [hook]
          item: <Function test_client_settings>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/functional/test_client.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests/functional/test_exceptions.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests/functional/test_exceptions.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests/functional/test_exceptions.py>
      find_module called for: test_exceptions [assertion]
      matched test file '/home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_exceptions.py' [assertion]
      found cached rewritten pyc for /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_exceptions.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_exceptions.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaec3be0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_exceptions.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaec12d0>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/functional/test_exceptions.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/functional/test_exceptions.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests/functional/test_getstate.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests/functional/test_getstate.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests/functional/test_getstate.py>
      find_module called for: test_getstate [assertion]
      matched test file '/home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_getstate.py' [assertion]
      found cached rewritten pyc for /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_getstate.py [assertion]
      early skip of rewriting module: dataclay.contrib.modeltest.classes [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_getstate.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_getstate.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_getstate.py>
            name: pytest
            obj: <module 'pytest' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_getstate.py>
            name: Box
            obj: <class 'dataclay.contrib.modeltest.classes.Box'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_getstate.py>
            name: TextReader
            obj: <class 'dataclay.contrib.modeltest.classes.TextReader'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_getstate.py>
            name: run_dc_coroutine
            obj: <function run_dc_coroutine at 0x749aebe9f640>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_getstate.py>
            name: test_getstate
            obj: <function test_getstate at 0x749aeaee5e10>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaefe080>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_getstate>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_getstate.py>
            name: test_getstate_v2
            obj: <function test_getstate_v2 at 0x749aeaee6200>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaefe050>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_getstate_v2>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_getstate.py>
            name: test_getstate_unload
            obj: <function test_getstate_unload at 0x749aeaee7880>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaefe020>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_getstate_unload>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_getstate.py>
            name: test_getstate_unload_v2
            obj: <function test_getstate_unload_v2 at 0x749aeaee7910>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaefe080>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_getstate_unload_v2>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_getstate.py>
            name: test_getstate_move
            obj: <function test_getstate_move at 0x749aeaee79a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaefdff0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_getstate_move>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_getstate.py>
            name: test_getstate_move_box
            obj: <function test_getstate_move_box at 0x749aeaee7a30>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaefdf30>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_getstate_move_box>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_getstate.py>
            name: test_getstate_move_box_recursive
            obj: <function test_getstate_move_box_recursive at 0x749aeaee7ac0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaefdfc0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_getstate_move_box_recursive>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_getstate.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaee4ee0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_getstate.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaec1240>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/functional/test_getstate.py' lenresult=7 outcome='passed'> [hook]
    genitems <Function test_getstate> [collection]
      pytest_itemcollected [hook]
          item: <Function test_getstate>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_getstate_v2> [collection]
      pytest_itemcollected [hook]
          item: <Function test_getstate_v2>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_getstate_unload> [collection]
      pytest_itemcollected [hook]
          item: <Function test_getstate_unload>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_getstate_unload_v2> [collection]
      pytest_itemcollected [hook]
          item: <Function test_getstate_unload_v2>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_getstate_move> [collection]
      pytest_itemcollected [hook]
          item: <Function test_getstate_move>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_getstate_move_box> [collection]
      pytest_itemcollected [hook]
          item: <Function test_getstate_move_box>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_getstate_move_box_recursive> [collection]
      pytest_itemcollected [hook]
          item: <Function test_getstate_move_box_recursive>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/functional/test_getstate.py' lenresult=7 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests/functional/test_heapmanager.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests/functional/test_heapmanager.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests/functional/test_heapmanager.py>
      find_module called for: test_heapmanager [assertion]
      matched test file '/home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_heapmanager.py' [assertion]
      found cached rewritten pyc for /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_heapmanager.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_heapmanager.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_heapmanager.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_heapmanager.py>
            name: Dog
            obj: <class 'dataclay.contrib.modeltest.family.Dog'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_heapmanager.py>
            name: Family
            obj: <class 'dataclay.contrib.modeltest.family.Family'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_heapmanager.py>
            name: Person
            obj: <class 'dataclay.contrib.modeltest.family.Person'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_heapmanager.py>
            name: run_dc_coroutine
            obj: <function run_dc_coroutine at 0x749aebe9f640>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_heapmanager.py>
            name: test_self_is_not_unloaded
            obj: <function test_self_is_not_unloaded at 0x749aead140d0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaeff4c0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_self_is_not_unloaded>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_heapmanager.py>
            name: test_reference_is_unloaded
            obj: <function test_reference_is_unloaded at 0x749aead14160>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaeff460>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_reference_is_unloaded>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_heapmanager.py>
            name: test_unloaded_get_property
            obj: <function test_unloaded_get_property at 0x749aead141f0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaeff490>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_unloaded_get_property>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_heapmanager.py>
            name: test_unloaded_set_property
            obj: <function test_unloaded_set_property at 0x749aead14280>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaeff4c0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_unloaded_set_property>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_heapmanager.py>
            name: test_load_from_inmemory
            obj: <function test_load_from_inmemory at 0x749aead14310>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaeff460>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_load_from_inmemory>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_heapmanager.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaee7d00>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_heapmanager.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaec1120>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/functional/test_heapmanager.py' lenresult=5 outcome='passed'> [hook]
    genitems <Function test_self_is_not_unloaded> [collection]
      pytest_itemcollected [hook]
          item: <Function test_self_is_not_unloaded>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_reference_is_unloaded> [collection]
      pytest_itemcollected [hook]
          item: <Function test_reference_is_unloaded>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_unloaded_get_property> [collection]
      pytest_itemcollected [hook]
          item: <Function test_unloaded_get_property>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_unloaded_set_property> [collection]
      pytest_itemcollected [hook]
          item: <Function test_unloaded_set_property>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_load_from_inmemory> [collection]
      pytest_itemcollected [hook]
          item: <Function test_load_from_inmemory>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/functional/test_heapmanager.py' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests/functional/test_make_persistent.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests/functional/test_make_persistent.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests/functional/test_make_persistent.py>
      find_module called for: test_make_persistent [assertion]
      matched test file '/home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_make_persistent.py' [assertion]
      found cached rewritten pyc for /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_make_persistent.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: pytest
            obj: <module 'pytest' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: Dog
            obj: <class 'dataclay.contrib.modeltest.family.Dog'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: Family
            obj: <class 'dataclay.contrib.modeltest.family.Family'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: Person
            obj: <class 'dataclay.contrib.modeltest.family.Person'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: MakePersistentTestClass
            obj: <class 'dataclay.contrib.modeltest.remote.MakePersistentTestClass'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_make_persistent_basic
            obj: <function test_make_persistent_basic at 0x749aead14d30>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20a60>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_make_persistent_basic>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_make_persistent_async
            obj: <function test_make_persistent_async at 0x749aead14ee0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20a90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_make_persistent_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_make_persistent_alias
            obj: <function test_make_persistent_alias at 0x749aead14dc0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aeaeffb20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_make_persistent_alias>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_make_persistent_alias_async
            obj: <function test_make_persistent_alias_async at 0x749aead14f70>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20940>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_make_persistent_alias_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_make_persistent_recursive
            obj: <function test_make_persistent_recursive at 0x749aead15000>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20940>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_make_persistent_recursive>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_make_persistent_recursive_async
            obj: <function test_make_persistent_recursive_async at 0x749aead15090>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20940>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_make_persistent_recursive_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_make_persistent_cycle
            obj: <function test_make_persistent_cycle at 0x749aead15120>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20940>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_make_persistent_cycle>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_make_persistent_cycle_async
            obj: <function test_make_persistent_cycle_async at 0x749aead151b0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20940>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_make_persistent_cycle_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_make_persistent_backend_id
            obj: <function test_make_persistent_backend_id at 0x749aead15240>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20940>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_make_persistent_backend_id>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_make_persistent_backend_id_async
            obj: <function test_make_persistent_backend_id_async at 0x749aead152d0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20940>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_make_persistent_backend_id_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_make_persistent_already_registered
            obj: <function test_make_persistent_already_registered at 0x749aead15360>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20940>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_make_persistent_already_registered>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_make_persistent_already_registered_async
            obj: <function test_make_persistent_already_registered_async at 0x749aead153f0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20940>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_make_persistent_already_registered_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_persistent_references
            obj: <function test_persistent_references at 0x749aead15480>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20940>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_persistent_references>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_persistent_references_async
            obj: <function test_persistent_references_async at 0x749aead15510>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20940>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_persistent_references_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_remote_automatic_register
            obj: <function test_remote_automatic_register at 0x749aead155a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20940>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_remote_automatic_register>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_remote_make_persistent
            obj: <function test_remote_make_persistent at 0x749aead15630>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20940>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_remote_make_persistent>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_remote_make_persistent_alias
            obj: <function test_remote_make_persistent_alias at 0x749aead156c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20940>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_remote_make_persistent_alias>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: test_remote_make_persistent_backend
            obj: <function test_remote_make_persistent_backend at 0x749aead15750>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead20940>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_remote_make_persistent_backend>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaee7be0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_make_persistent.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaec0a60>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/functional/test_make_persistent.py' lenresult=18 outcome='passed'> [hook]
    genitems <Function test_make_persistent_basic> [collection]
      pytest_itemcollected [hook]
          item: <Function test_make_persistent_basic>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_make_persistent_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_make_persistent_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_make_persistent_alias> [collection]
      pytest_itemcollected [hook]
          item: <Function test_make_persistent_alias>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_make_persistent_alias_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_make_persistent_alias_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_make_persistent_recursive> [collection]
      pytest_itemcollected [hook]
          item: <Function test_make_persistent_recursive>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_make_persistent_recursive_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_make_persistent_recursive_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_make_persistent_cycle> [collection]
      pytest_itemcollected [hook]
          item: <Function test_make_persistent_cycle>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_make_persistent_cycle_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_make_persistent_cycle_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_make_persistent_backend_id> [collection]
      pytest_itemcollected [hook]
          item: <Function test_make_persistent_backend_id>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_make_persistent_backend_id_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_make_persistent_backend_id_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_make_persistent_already_registered> [collection]
      pytest_itemcollected [hook]
          item: <Function test_make_persistent_already_registered>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_make_persistent_already_registered_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_make_persistent_already_registered_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_persistent_references> [collection]
      pytest_itemcollected [hook]
          item: <Function test_persistent_references>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_persistent_references_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_persistent_references_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_remote_automatic_register> [collection]
      pytest_itemcollected [hook]
          item: <Function test_remote_automatic_register>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_remote_make_persistent> [collection]
      pytest_itemcollected [hook]
          item: <Function test_remote_make_persistent>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_remote_make_persistent_alias> [collection]
      pytest_itemcollected [hook]
          item: <Function test_remote_make_persistent_alias>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_remote_make_persistent_backend> [collection]
      pytest_itemcollected [hook]
          item: <Function test_remote_make_persistent_backend>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/functional/test_make_persistent.py' lenresult=18 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests/functional/test_move_object.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests/functional/test_move_object.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests/functional/test_move_object.py>
      find_module called for: test_move_object [assertion]
      matched test file '/home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_move_object.py' [assertion]
      found cached rewritten pyc for /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_move_object.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: pytest
            obj: <module 'pytest' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: Dog
            obj: <class 'dataclay.contrib.modeltest.family.Dog'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: Family
            obj: <class 'dataclay.contrib.modeltest.family.Family'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: Person
            obj: <class 'dataclay.contrib.modeltest.family.Person'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: MoveObjectTestClass
            obj: <class 'dataclay.contrib.modeltest.remote.MoveObjectTestClass'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: run_dc_coroutine
            obj: <function run_dc_coroutine at 0x749aebe9f640>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_object
            obj: <function test_move_object at 0x749aead16290>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23af0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_move_object>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_object_async
            obj: <function test_move_object_async at 0x749aead16320>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23b20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_move_object_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_recursive_move
            obj: <function test_recursive_move at 0x749aead163b0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23ac0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_recursive_move>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_recursive_move_async
            obj: <function test_recursive_move_async at 0x749aead16440>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23af0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_recursive_move_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_not_recursive_move
            obj: <function test_not_recursive_move at 0x749aead164d0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23b20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_not_recursive_move>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_not_recursive_move_async
            obj: <function test_not_recursive_move_async at 0x749aead16560>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23ac0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_not_recursive_move_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_unload_object
            obj: <function test_move_unload_object at 0x749aead165f0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23af0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_move_unload_object>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_unload_object_async
            obj: <function test_move_unload_object_async at 0x749aead16680>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23b20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_move_unload_object_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_unload_object_reference
            obj: <function test_move_unload_object_reference at 0x749aead16710>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23ac0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_move_unload_object_reference>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_unload_object_reference_async
            obj: <function test_move_unload_object_reference_async at 0x749aead167a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23af0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_move_unload_object_reference_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_reference
            obj: <function test_move_reference at 0x749aead16830>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23b20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_move_reference>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_reference_async
            obj: <function test_move_reference_async at 0x749aead168c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23ac0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_move_reference_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_wrong_backend_id
            obj: <function test_wrong_backend_id at 0x749aead16950>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23af0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_wrong_backend_id>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_wrong_backend_id_async
            obj: <function test_wrong_backend_id_async at 0x749aead169e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23b20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_wrong_backend_id_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_recursive_remotes
            obj: <function test_move_recursive_remotes at 0x749aead16a70>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23ac0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_move_recursive_remotes>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_recursive_remotes_async
            obj: <function test_move_recursive_remotes_async at 0x749aead16b00>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23af0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_move_recursive_remotes_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_recursive_not_remotes
            obj: <function test_move_recursive_not_remotes at 0x749aead16b90>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23b20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_move_recursive_not_remotes>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_recursive_not_remotes_async
            obj: <function test_move_recursive_not_remotes_async at 0x749aead16c20>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23ac0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_move_recursive_not_remotes_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_recursive_reference_of_reference_v1
            obj: <function test_move_recursive_reference_of_reference_v1 at 0x749aead16cb0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23af0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_move_recursive_reference_of_reference_v1>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_recursive_reference_of_reference_v1_async
            obj: <function test_move_recursive_reference_of_reference_v1_async at 0x749aead16d40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23b20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_move_recursive_reference_of_reference_v1_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_recursive_reference_of_reference_v2
            obj: <function test_move_recursive_reference_of_reference_v2 at 0x749aead16dd0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23ac0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_move_recursive_reference_of_reference_v2>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_recursive_reference_of_reference_v2_async
            obj: <function test_move_recursive_reference_of_reference_v2_async at 0x749aead16e60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23af0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_move_recursive_reference_of_reference_v2_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_recursive_reference_of_reference_v3
            obj: <function test_move_recursive_reference_of_reference_v3 at 0x749aead16ef0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23b20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_move_recursive_reference_of_reference_v3>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_recursive_reference_of_reference_v3_async
            obj: <function test_move_recursive_reference_of_reference_v3_async at 0x749aead16f80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23ac0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_move_recursive_reference_of_reference_v3_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_recursive_reference_of_reference_v4
            obj: <function test_move_recursive_reference_of_reference_v4 at 0x749aead17010>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23af0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_move_recursive_reference_of_reference_v4>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_recursive_reference_of_reference_v4_async
            obj: <function test_move_recursive_reference_of_reference_v4_async at 0x749aead170a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23b20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_move_recursive_reference_of_reference_v4_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_recursive_reference_cycle_v1
            obj: <function test_move_recursive_reference_cycle_v1 at 0x749aead17130>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23ac0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_move_recursive_reference_cycle_v1>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_recursive_reference_cycle_v1_async
            obj: <function test_move_recursive_reference_cycle_v1_async at 0x749aead171c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23af0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_move_recursive_reference_cycle_v1_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_recursive_reference_cycle_v2
            obj: <function test_move_recursive_reference_cycle_v2 at 0x749aead17250>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23b20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_move_recursive_reference_cycle_v2>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_recursive_reference_cycle_v2_async
            obj: <function test_move_recursive_reference_cycle_v2_async at 0x749aead172e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23ac0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_move_recursive_reference_cycle_v2_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_local_object
            obj: <function test_move_local_object at 0x749aead17370>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23af0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_move_local_object>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_local_object_async
            obj: <function test_move_local_object_async at 0x749aead17400>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23b20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_move_local_object_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_local_object_recursive_remotes
            obj: <function test_move_local_object_recursive_remotes at 0x749aead17490>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23ac0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_move_local_object_recursive_remotes>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: test_move_local_object_recursive_remotes_async
            obj: <function test_move_local_object_recursive_remotes_async at 0x749aead17520>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead23af0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_move_local_object_recursive_remotes_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aead15990>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_move_object.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaec0af0>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/functional/test_move_object.py' lenresult=34 outcome='passed'> [hook]
    genitems <Function test_move_object> [collection]
      pytest_itemcollected [hook]
          item: <Function test_move_object>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_move_object_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_move_object_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_recursive_move> [collection]
      pytest_itemcollected [hook]
          item: <Function test_recursive_move>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_recursive_move_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_recursive_move_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_not_recursive_move> [collection]
      pytest_itemcollected [hook]
          item: <Function test_not_recursive_move>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_not_recursive_move_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_not_recursive_move_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_move_unload_object> [collection]
      pytest_itemcollected [hook]
          item: <Function test_move_unload_object>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_move_unload_object_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_move_unload_object_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_move_unload_object_reference> [collection]
      pytest_itemcollected [hook]
          item: <Function test_move_unload_object_reference>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_move_unload_object_reference_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_move_unload_object_reference_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_move_reference> [collection]
      pytest_itemcollected [hook]
          item: <Function test_move_reference>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_move_reference_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_move_reference_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_wrong_backend_id> [collection]
      pytest_itemcollected [hook]
          item: <Function test_wrong_backend_id>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_wrong_backend_id_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_wrong_backend_id_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_move_recursive_remotes> [collection]
      pytest_itemcollected [hook]
          item: <Function test_move_recursive_remotes>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_move_recursive_remotes_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_move_recursive_remotes_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_move_recursive_not_remotes> [collection]
      pytest_itemcollected [hook]
          item: <Function test_move_recursive_not_remotes>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_move_recursive_not_remotes_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_move_recursive_not_remotes_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_move_recursive_reference_of_reference_v1> [collection]
      pytest_itemcollected [hook]
          item: <Function test_move_recursive_reference_of_reference_v1>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_move_recursive_reference_of_reference_v1_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_move_recursive_reference_of_reference_v1_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_move_recursive_reference_of_reference_v2> [collection]
      pytest_itemcollected [hook]
          item: <Function test_move_recursive_reference_of_reference_v2>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_move_recursive_reference_of_reference_v2_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_move_recursive_reference_of_reference_v2_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_move_recursive_reference_of_reference_v3> [collection]
      pytest_itemcollected [hook]
          item: <Function test_move_recursive_reference_of_reference_v3>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_move_recursive_reference_of_reference_v3_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_move_recursive_reference_of_reference_v3_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_move_recursive_reference_of_reference_v4> [collection]
      pytest_itemcollected [hook]
          item: <Function test_move_recursive_reference_of_reference_v4>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_move_recursive_reference_of_reference_v4_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_move_recursive_reference_of_reference_v4_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_move_recursive_reference_cycle_v1> [collection]
      pytest_itemcollected [hook]
          item: <Function test_move_recursive_reference_cycle_v1>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_move_recursive_reference_cycle_v1_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_move_recursive_reference_cycle_v1_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_move_recursive_reference_cycle_v2> [collection]
      pytest_itemcollected [hook]
          item: <Function test_move_recursive_reference_cycle_v2>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_move_recursive_reference_cycle_v2_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_move_recursive_reference_cycle_v2_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_move_local_object> [collection]
      pytest_itemcollected [hook]
          item: <Function test_move_local_object>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_move_local_object_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_move_local_object_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_move_local_object_recursive_remotes> [collection]
      pytest_itemcollected [hook]
          item: <Function test_move_local_object_recursive_remotes>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_move_local_object_recursive_remotes_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_move_local_object_recursive_remotes_async>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/functional/test_move_object.py' lenresult=34 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests/functional/test_new_replica.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests/functional/test_new_replica.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests/functional/test_new_replica.py>
      find_module called for: test_new_replica [assertion]
      matched test file '/home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_new_replica.py' [assertion]
      found cached rewritten pyc for /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_new_replica.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_new_replica.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_new_replica.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_new_replica.py>
            name: pytest
            obj: <module 'pytest' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_new_replica.py>
            name: Dog
            obj: <class 'dataclay.contrib.modeltest.family.Dog'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_new_replica.py>
            name: Family
            obj: <class 'dataclay.contrib.modeltest.family.Family'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_new_replica.py>
            name: Person
            obj: <class 'dataclay.contrib.modeltest.family.Person'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_new_replica.py>
            name: test_new_replica
            obj: <function test_new_replica at 0x749aead548b0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead4d270>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_new_replica>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_new_replica.py>
            name: test_new_replica_async
            obj: <function test_new_replica_async at 0x749aead54940>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead4d210>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_new_replica_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_new_replica.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aead545e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_new_replica.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaec0940>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/functional/test_new_replica.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function test_new_replica> [collection]
      pytest_itemcollected [hook]
          item: <Function test_new_replica>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_new_replica_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_new_replica_async>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/functional/test_new_replica.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests/functional/test_versioning.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests/functional/test_versioning.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests/functional/test_versioning.py>
      find_module called for: test_versioning [assertion]
      matched test file '/home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_versioning.py' [assertion]
      found cached rewritten pyc for /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/test_versioning.py [assertion]
      early skip of rewriting module: storage [assertion]
      early skip of rewriting module: storage.api [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: pytest
            obj: <module 'pytest' from '/home/dcanocan/Desktop/Curro/git/dataclay/venv/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: storage
            obj: <module 'storage' from '/home/dcanocan/Desktop/Curro/git/dataclay/src/storage/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: Dog
            obj: <class 'dataclay.contrib.modeltest.family.Dog'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: Family
            obj: <class 'dataclay.contrib.modeltest.family.Family'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: Person
            obj: <class 'dataclay.contrib.modeltest.family.Person'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: run_dc_coroutine
            obj: <function run_dc_coroutine at 0x749aebe9f640>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: test_new_version_and_consolidate
            obj: <function test_new_version_and_consolidate at 0x749aead17d00>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead4dcf0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_new_version_and_consolidate>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: test_new_version_and_consolidate_async
            obj: <function test_new_version_and_consolidate_async at 0x749aead54160>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead4dd20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_new_version_and_consolidate_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: test_version_of_version
            obj: <function test_version_of_version at 0x749aead543a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead4dcc0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_version_of_version>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: test_version_of_version_async
            obj: <function test_version_of_version_async at 0x749aead54430>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead4dcf0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_version_of_version_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: test_version_references
            obj: <function test_version_references at 0x749aead54790>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead4dd20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_version_references>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: test_version_references_async
            obj: <function test_version_references_async at 0x749aead54a60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead4dcc0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_version_references_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: test_version_references_2
            obj: <function test_version_references_2 at 0x749aead54af0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead4dcf0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_version_references_2>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: test_version_references_2_async
            obj: <function test_version_references_2_async at 0x749aead54b80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead4dd20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_version_references_2_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: test_version_references_3
            obj: <function test_version_references_3 at 0x749aead54c10>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead4dcc0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_version_references_3>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: test_version_references_3_async
            obj: <function test_version_references_3_async at 0x749aead54ca0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead4dcf0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_version_references_3_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: test_new_object_version
            obj: <function test_new_object_version at 0x749aead54d30>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead4dd20>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_new_object_version>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: test_new_object_version_async
            obj: <function test_new_object_version_async at 0x749aead54dc0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x749aead4dcc0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_new_object_version_async>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aead17d90>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/functional/test_versioning.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x749aeaec04c0>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/functional/test_versioning.py' lenresult=12 outcome='passed'> [hook]
    genitems <Function test_new_version_and_consolidate> [collection]
      pytest_itemcollected [hook]
          item: <Function test_new_version_and_consolidate>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_new_version_and_consolidate_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_new_version_and_consolidate_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_version_of_version> [collection]
      pytest_itemcollected [hook]
          item: <Function test_version_of_version>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_version_of_version_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_version_of_version_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_version_references> [collection]
      pytest_itemcollected [hook]
          item: <Function test_version_references>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_version_references_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_version_references_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_version_references_2> [collection]
      pytest_itemcollected [hook]
          item: <Function test_version_references_2>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_version_references_2_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_version_references_2_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_version_references_3> [collection]
      pytest_itemcollected [hook]
          item: <Function test_version_references_3>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_version_references_3_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_version_references_3_async>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_new_object_version> [collection]
      pytest_itemcollected [hook]
          item: <Function test_new_object_version>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_new_object_version_async> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_new_object_version_async>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/functional/test_versioning.py' lenresult=12 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x749aee007f40>
          items: [<Function test_activemethod_argument_make_persistent>, <Function test_activemethod_persistent_argument>, <Function test_activemethod_defined_properties>, <Function test_activemethod_non_defined_properties>, <Function test_activemethod_inner_make_persistent>, <Function test_remote_activemethod>, <Function test_get_by_alias>, <Coroutine test_get_by_alias_async>, <Function test_delete_alias>, <Coroutine test_delete_alias_async>, <Function test_same_alias>, <Coroutine test_same_alias_async>, <Function test_add_alias>, <Coroutine test_add_alias_async>, <Function test_get_aliases>, <Coroutine test_get_aliases_async>, <Function test_alien_builtin>, <Function test_alien_proxy_classes>, <Function test_alien_python_class>, <Function test_alien_pydantic_model>, <Function test_alien_getsetdelitem>, <Function test_alien_getsetdelattr>, <Function test_client_settings>, <Function test_getstate>, <Function test_getstate_v2>, <Function test_getstate_unload>, <Function test_getstate_unload_v2>, <Function test_getstate_move>, <Function test_getstate_move_box>, <Function test_getstate_move_box_recursive>, <Function test_self_is_not_unloaded>, <Function test_reference_is_unloaded>, <Function test_unloaded_get_property>, <Function test_unloaded_set_property>, <Function test_load_from_inmemory>, <Function test_make_persistent_basic>, <Coroutine test_make_persistent_async>, <Function test_make_persistent_alias>, <Coroutine test_make_persistent_alias_async>, <Function test_make_persistent_recursive>, <Coroutine test_make_persistent_recursive_async>, <Function test_make_persistent_cycle>, <Coroutine test_make_persistent_cycle_async>, <Function test_make_persistent_backend_id>, <Coroutine test_make_persistent_backend_id_async>, <Function test_make_persistent_already_registered>, <Coroutine test_make_persistent_already_registered_async>, <Function test_persistent_references>, <Coroutine test_persistent_references_async>, <Function test_remote_automatic_register>, <Function test_remote_make_persistent>, <Function test_remote_make_persistent_alias>, <Function test_remote_make_persistent_backend>, <Function test_move_object>, <Coroutine test_move_object_async>, <Function test_recursive_move>, <Coroutine test_recursive_move_async>, <Function test_not_recursive_move>, <Coroutine test_not_recursive_move_async>, <Function test_move_unload_object>, <Coroutine test_move_unload_object_async>, <Function test_move_unload_object_reference>, <Coroutine test_move_unload_object_reference_async>, <Function test_move_reference>, <Coroutine test_move_reference_async>, <Function test_wrong_backend_id>, <Coroutine test_wrong_backend_id_async>, <Function test_move_recursive_remotes>, <Coroutine test_move_recursive_remotes_async>, <Function test_move_recursive_not_remotes>, <Coroutine test_move_recursive_not_remotes_async>, <Function test_move_recursive_reference_of_reference_v1>, <Coroutine test_move_recursive_reference_of_reference_v1_async>, <Function test_move_recursive_reference_of_reference_v2>, <Coroutine test_move_recursive_reference_of_reference_v2_async>, <Function test_move_recursive_reference_of_reference_v3>, <Coroutine test_move_recursive_reference_of_reference_v3_async>, <Function test_move_recursive_reference_of_reference_v4>, <Coroutine test_move_recursive_reference_of_reference_v4_async>, <Function test_move_recursive_reference_cycle_v1>, <Coroutine test_move_recursive_reference_cycle_v1_async>, <Function test_move_recursive_reference_cycle_v2>, <Coroutine test_move_recursive_reference_cycle_v2_async>, <Function test_move_local_object>, <Coroutine test_move_local_object_async>, <Function test_move_local_object_recursive_remotes>, <Coroutine test_move_local_object_recursive_remotes_async>, <Function test_new_replica>, <Coroutine test_new_replica_async>, <Function test_new_version_and_consolidate>, <Coroutine test_new_version_and_consolidate_async>, <Function test_version_of_version>, <Coroutine test_version_of_version_async>, <Function test_version_references>, <Coroutine test_version_references_async>, <Function test_version_references_2>, <Coroutine test_version_references_2_async>, <Function test_version_references_3>, <Coroutine test_version_references_3_async>, <Function test_new_object_version>, <Coroutine test_new_object_version_async>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x749aee007f40>
            items: [<Function test_activemethod_argument_make_persistent>, <Function test_activemethod_persistent_argument>, <Function test_activemethod_defined_properties>, <Function test_activemethod_non_defined_properties>, <Function test_activemethod_inner_make_persistent>, <Function test_remote_activemethod>, <Function test_get_by_alias>, <Coroutine test_get_by_alias_async>, <Function test_delete_alias>, <Coroutine test_delete_alias_async>, <Function test_same_alias>, <Coroutine test_same_alias_async>, <Function test_add_alias>, <Coroutine test_add_alias_async>, <Function test_get_aliases>, <Coroutine test_get_aliases_async>, <Function test_alien_builtin>, <Function test_alien_proxy_classes>, <Function test_alien_python_class>, <Function test_alien_pydantic_model>, <Function test_alien_getsetdelitem>, <Function test_alien_getsetdelattr>, <Function test_client_settings>, <Function test_getstate>, <Function test_getstate_v2>, <Function test_getstate_unload>, <Function test_getstate_unload_v2>, <Function test_getstate_move>, <Function test_getstate_move_box>, <Function test_getstate_move_box_recursive>, <Function test_self_is_not_unloaded>, <Function test_reference_is_unloaded>, <Function test_unloaded_get_property>, <Function test_unloaded_set_property>, <Function test_load_from_inmemory>, <Function test_make_persistent_basic>, <Coroutine test_make_persistent_async>, <Function test_make_persistent_alias>, <Coroutine test_make_persistent_alias_async>, <Function test_make_persistent_recursive>, <Coroutine test_make_persistent_recursive_async>, <Function test_make_persistent_cycle>, <Coroutine test_make_persistent_cycle_async>, <Function test_make_persistent_backend_id>, <Coroutine test_make_persistent_backend_id_async>, <Function test_make_persistent_already_registered>, <Coroutine test_make_persistent_already_registered_async>, <Function test_persistent_references>, <Coroutine test_persistent_references_async>, <Function test_remote_automatic_register>, <Function test_remote_make_persistent>, <Function test_remote_make_persistent_alias>, <Function test_remote_make_persistent_backend>, <Function test_move_object>, <Coroutine test_move_object_async>, <Function test_recursive_move>, <Coroutine test_recursive_move_async>, <Function test_not_recursive_move>, <Coroutine test_not_recursive_move_async>, <Function test_move_unload_object>, <Coroutine test_move_unload_object_async>, <Function test_move_unload_object_reference>, <Coroutine test_move_unload_object_reference_async>, <Function test_move_reference>, <Coroutine test_move_reference_async>, <Function test_wrong_backend_id>, <Coroutine test_wrong_backend_id_async>, <Function test_move_recursive_remotes>, <Coroutine test_move_recursive_remotes_async>, <Function test_move_recursive_not_remotes>, <Coroutine test_move_recursive_not_remotes_async>, <Function test_move_recursive_reference_of_reference_v1>, <Coroutine test_move_recursive_reference_of_reference_v1_async>, <Function test_move_recursive_reference_of_reference_v2>, <Coroutine test_move_recursive_reference_of_reference_v2_async>, <Function test_move_recursive_reference_of_reference_v3>, <Coroutine test_move_recursive_reference_of_reference_v3_async>, <Function test_move_recursive_reference_of_reference_v4>, <Coroutine test_move_recursive_reference_of_reference_v4_async>, <Function test_move_recursive_reference_cycle_v1>, <Coroutine test_move_recursive_reference_cycle_v1_async>, <Function test_move_recursive_reference_cycle_v2>, <Coroutine test_move_recursive_reference_cycle_v2_async>, <Function test_move_local_object>, <Coroutine test_move_local_object_async>, <Function test_move_local_object_recursive_remotes>, <Coroutine test_move_local_object_recursive_remotes_async>, <Function test_new_replica>, <Coroutine test_new_replica_async>, <Function test_new_version_and_consolidate>, <Coroutine test_new_version_and_consolidate_async>, <Function test_version_of_version>, <Coroutine test_version_of_version_async>, <Function test_version_references>, <Coroutine test_version_references_async>, <Function test_version_references_2>, <Coroutine test_version_references_2_async>, <Function test_version_references_3>, <Coroutine test_version_references_3_async>, <Function test_new_object_version>, <Coroutine test_new_object_version_async>]
            start_path: /home/dcanocan/Desktop/Curro/git/dataclay
            startdir: /home/dcanocan/Desktop/Curro/git/dataclay
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session dataclay exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=101>
      pytest_runtest_protocol [hook]
          item: <Function test_activemethod_argument_make_persistent>
          nextitem: <Function test_activemethod_persistent_argument>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_activemethod.py::test_activemethod_argument_make_persistent
            location: ('tests/functional/test_activemethod.py', 6, 'test_activemethod_argument_make_persistent')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_activemethod_argument_make_persistent>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_setup --> <asyncio.unix_events._UnixDefaultEventLoopPolicy object at 0x749aead4e6e0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_setup --> 127.0.0.1 [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_setup --> docker compose [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_setup --> <_pytest.config.Config object at 0x749aee007f40> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_setup --> /home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/docker-compose.yml [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_setup --> pytest18854 [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_setup --> up --build -d [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_setup --> down -v [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_setup --> Services(_docker_compose=DockerComposeExecutor(_compose_command='docker compose', _compose_files=['/home/dcanocan/Desktop/Curro/git/dataclay/tests/functional/docker-compose.yml'], _compose_project_name='pytest18854'), _services={}) [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_activemethod_argument_make_persistent>>
          early skip of rewriting module: grpc._channel [assertion]
          early skip of rewriting module: grpc.experimental [assertion]
          early skip of rewriting module: grpc._simple_stubs [assertion]
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_setup --> <dataclay.client.api.Client object at 0x749aead7bb50> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_activemethod_argument_make_persistent>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_activemethod_argument_make_persistent' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_argument_make_persistent' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_argument_make_persistent' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_activemethod_argument_make_persistent>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_activemethod_argument_make_persistent>
          early skip of rewriting module: concurrent.futures.thread [assertion]
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_activemethod_argument_make_persistent>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_activemethod_argument_make_persistent' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_argument_make_persistent' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_argument_make_persistent' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_activemethod_argument_make_persistent>
            nextitem: <Function test_activemethod_persistent_argument>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_activemethod_argument_make_persistent>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_activemethod_argument_make_persistent' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_argument_make_persistent' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_argument_make_persistent' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_activemethod.py::test_activemethod_argument_make_persistent
            location: ('tests/functional/test_activemethod.py', 6, 'test_activemethod_argument_make_persistent')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_activemethod_persistent_argument>
          nextitem: <Function test_activemethod_defined_properties>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_activemethod.py::test_activemethod_persistent_argument
            location: ('tests/functional/test_activemethod.py', 21, 'test_activemethod_persistent_argument')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_activemethod_persistent_argument>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_activemethod_persistent_argument>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_activemethod_persistent_argument' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_persistent_argument' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_persistent_argument' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_activemethod_persistent_argument>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_activemethod_persistent_argument>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_activemethod_persistent_argument>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_activemethod_persistent_argument' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_persistent_argument' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_persistent_argument' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_activemethod_persistent_argument>
            nextitem: <Function test_activemethod_defined_properties>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_activemethod_persistent_argument>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_activemethod_persistent_argument' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_persistent_argument' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_persistent_argument' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_activemethod.py::test_activemethod_persistent_argument
            location: ('tests/functional/test_activemethod.py', 21, 'test_activemethod_persistent_argument')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_activemethod_defined_properties>
          nextitem: <Function test_activemethod_non_defined_properties>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_activemethod.py::test_activemethod_defined_properties
            location: ('tests/functional/test_activemethod.py', 33, 'test_activemethod_defined_properties')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_activemethod_defined_properties>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_activemethod_defined_properties>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_activemethod_defined_properties' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_defined_properties' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_defined_properties' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_activemethod_defined_properties>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_activemethod_defined_properties>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_activemethod_defined_properties>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_activemethod_defined_properties' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_defined_properties' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_defined_properties' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_activemethod_defined_properties>
            nextitem: <Function test_activemethod_non_defined_properties>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_activemethod_defined_properties>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_activemethod_defined_properties' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_defined_properties' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_defined_properties' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_activemethod.py::test_activemethod_defined_properties
            location: ('tests/functional/test_activemethod.py', 33, 'test_activemethod_defined_properties')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_activemethod_non_defined_properties>
          nextitem: <Function test_activemethod_inner_make_persistent>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_activemethod.py::test_activemethod_non_defined_properties
            location: ('tests/functional/test_activemethod.py', 45, 'test_activemethod_non_defined_properties')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_activemethod_non_defined_properties>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_activemethod_non_defined_properties>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_activemethod_non_defined_properties' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_non_defined_properties' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_non_defined_properties' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_activemethod_non_defined_properties>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_activemethod_non_defined_properties>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_activemethod_non_defined_properties>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_activemethod_non_defined_properties' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_non_defined_properties' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_non_defined_properties' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_activemethod_non_defined_properties>
            nextitem: <Function test_activemethod_inner_make_persistent>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_activemethod_non_defined_properties>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_activemethod_non_defined_properties' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_non_defined_properties' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_non_defined_properties' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_activemethod.py::test_activemethod_non_defined_properties
            location: ('tests/functional/test_activemethod.py', 45, 'test_activemethod_non_defined_properties')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_activemethod_inner_make_persistent>
          nextitem: <Function test_remote_activemethod>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_activemethod.py::test_activemethod_inner_make_persistent
            location: ('tests/functional/test_activemethod.py', 58, 'test_activemethod_inner_make_persistent')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_activemethod_inner_make_persistent>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_activemethod_inner_make_persistent>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_activemethod_inner_make_persistent' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_inner_make_persistent' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_inner_make_persistent' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_activemethod_inner_make_persistent>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_activemethod_inner_make_persistent>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_activemethod_inner_make_persistent>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_activemethod_inner_make_persistent' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_inner_make_persistent' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_inner_make_persistent' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_activemethod_inner_make_persistent>
            nextitem: <Function test_remote_activemethod>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_activemethod_inner_make_persistent>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_activemethod_inner_make_persistent' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_inner_make_persistent' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_activemethod_inner_make_persistent' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_activemethod.py::test_activemethod_inner_make_persistent
            location: ('tests/functional/test_activemethod.py', 58, 'test_activemethod_inner_make_persistent')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_remote_activemethod>
          nextitem: <Function test_get_by_alias>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_activemethod.py::test_remote_activemethod
            location: ('tests/functional/test_activemethod.py', 74, 'test_remote_activemethod')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_remote_activemethod>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_remote_activemethod>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_remote_activemethod' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_remote_activemethod' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_remote_activemethod' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_remote_activemethod>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_remote_activemethod>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_remote_activemethod>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_remote_activemethod' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_remote_activemethod' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_remote_activemethod' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_remote_activemethod>
            nextitem: <Function test_get_by_alias>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_remote_activemethod>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_activemethod.py::test_remote_activemethod' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_activemethod.py::test_remote_activemethod' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_activemethod.py::test_remote_activemethod' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_activemethod.py::test_remote_activemethod
            location: ('tests/functional/test_activemethod.py', 74, 'test_remote_activemethod')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_get_by_alias>
          nextitem: <Coroutine test_get_by_alias_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_alias.py::test_get_by_alias
            location: ('tests/functional/test_alias.py', 6, 'test_get_by_alias')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_get_by_alias>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_by_alias>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_get_by_alias' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_get_by_alias' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_get_by_alias' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_get_by_alias>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_get_by_alias>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_by_alias>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_get_by_alias' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_get_by_alias' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_get_by_alias' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_get_by_alias>
            nextitem: <Coroutine test_get_by_alias_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_by_alias>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_get_by_alias' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_get_by_alias' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_get_by_alias' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_alias.py::test_get_by_alias
            location: ('tests/functional/test_alias.py', 6, 'test_get_by_alias')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_get_by_alias_async>
          nextitem: <Function test_delete_alias>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_alias.py::test_get_by_alias_async
            location: ('tests/functional/test_alias.py', 13, 'test_get_by_alias_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_get_by_alias_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_get_by_alias_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_get_by_alias_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_get_by_alias_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_get_by_alias_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_get_by_alias_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_get_by_alias_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_get_by_alias_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_get_by_alias_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_get_by_alias_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_get_by_alias_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_get_by_alias_async>
            nextitem: <Function test_delete_alias>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_get_by_alias_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_get_by_alias_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_get_by_alias_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_get_by_alias_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_alias.py::test_get_by_alias_async
            location: ('tests/functional/test_alias.py', 13, 'test_get_by_alias_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_delete_alias>
          nextitem: <Coroutine test_delete_alias_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_alias.py::test_delete_alias
            location: ('tests/functional/test_alias.py', 21, 'test_delete_alias')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_delete_alias>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_delete_alias>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_delete_alias' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_delete_alias' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_delete_alias' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_delete_alias>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_delete_alias>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_delete_alias>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_delete_alias' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_delete_alias' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_delete_alias' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_delete_alias>
            nextitem: <Coroutine test_delete_alias_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_delete_alias>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_delete_alias' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_delete_alias' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_delete_alias' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_alias.py::test_delete_alias
            location: ('tests/functional/test_alias.py', 21, 'test_delete_alias')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_delete_alias_async>
          nextitem: <Function test_same_alias>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_alias.py::test_delete_alias_async
            location: ('tests/functional/test_alias.py', 31, 'test_delete_alias_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_delete_alias_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_delete_alias_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_delete_alias_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_delete_alias_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_delete_alias_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_delete_alias_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_delete_alias_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_delete_alias_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_delete_alias_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_delete_alias_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_delete_alias_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_delete_alias_async>
            nextitem: <Function test_same_alias>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_delete_alias_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_delete_alias_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_delete_alias_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_delete_alias_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_alias.py::test_delete_alias_async
            location: ('tests/functional/test_alias.py', 31, 'test_delete_alias_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_same_alias>
          nextitem: <Coroutine test_same_alias_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_alias.py::test_same_alias
            location: ('tests/functional/test_alias.py', 42, 'test_same_alias')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_same_alias>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_same_alias>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_same_alias' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_same_alias' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_same_alias' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_same_alias>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_same_alias>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_same_alias>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_same_alias' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_same_alias' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_same_alias' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_same_alias>
            nextitem: <Coroutine test_same_alias_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_same_alias>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_same_alias' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_same_alias' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_same_alias' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_alias.py::test_same_alias
            location: ('tests/functional/test_alias.py', 42, 'test_same_alias')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_same_alias_async>
          nextitem: <Function test_add_alias>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_alias.py::test_same_alias_async
            location: ('tests/functional/test_alias.py', 52, 'test_same_alias_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_same_alias_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_same_alias_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_same_alias_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_same_alias_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_same_alias_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_same_alias_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_same_alias_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_same_alias_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_same_alias_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_same_alias_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_same_alias_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_same_alias_async>
            nextitem: <Function test_add_alias>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_same_alias_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_same_alias_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_same_alias_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_same_alias_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_alias.py::test_same_alias_async
            location: ('tests/functional/test_alias.py', 52, 'test_same_alias_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_add_alias>
          nextitem: <Coroutine test_add_alias_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_alias.py::test_add_alias
            location: ('tests/functional/test_alias.py', 63, 'test_add_alias')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_add_alias>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_add_alias>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_add_alias' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_add_alias' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_add_alias' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_add_alias>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_add_alias>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_add_alias>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_add_alias' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_add_alias' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_add_alias' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_add_alias>
            nextitem: <Coroutine test_add_alias_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_add_alias>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_add_alias' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_add_alias' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_add_alias' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_alias.py::test_add_alias
            location: ('tests/functional/test_alias.py', 63, 'test_add_alias')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_add_alias_async>
          nextitem: <Function test_get_aliases>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_alias.py::test_add_alias_async
            location: ('tests/functional/test_alias.py', 71, 'test_add_alias_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_add_alias_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_add_alias_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_add_alias_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_add_alias_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_add_alias_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_add_alias_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_add_alias_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_add_alias_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_add_alias_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_add_alias_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_add_alias_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_add_alias_async>
            nextitem: <Function test_get_aliases>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_add_alias_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_add_alias_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_add_alias_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_add_alias_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_alias.py::test_add_alias_async
            location: ('tests/functional/test_alias.py', 71, 'test_add_alias_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_get_aliases>
          nextitem: <Coroutine test_get_aliases_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_alias.py::test_get_aliases
            location: ('tests/functional/test_alias.py', 80, 'test_get_aliases')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_get_aliases>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_aliases>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_get_aliases' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_get_aliases' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_get_aliases' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_get_aliases>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_get_aliases>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_aliases>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_get_aliases' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_get_aliases' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_get_aliases' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_get_aliases>
            nextitem: <Coroutine test_get_aliases_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_aliases>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_get_aliases' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_get_aliases' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_get_aliases' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_alias.py::test_get_aliases
            location: ('tests/functional/test_alias.py', 80, 'test_get_aliases')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_get_aliases_async>
          nextitem: <Function test_alien_builtin>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_alias.py::test_get_aliases_async
            location: ('tests/functional/test_alias.py', 94, 'test_get_aliases_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_get_aliases_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_get_aliases_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_get_aliases_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_get_aliases_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_get_aliases_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_get_aliases_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_get_aliases_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_get_aliases_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_get_aliases_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_get_aliases_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_get_aliases_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_get_aliases_async>
            nextitem: <Function test_alien_builtin>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_get_aliases_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alias.py::test_get_aliases_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alias.py::test_get_aliases_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alias.py::test_get_aliases_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_alias.py::test_get_aliases_async
            location: ('tests/functional/test_alias.py', 94, 'test_get_aliases_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_alien_builtin>
          nextitem: <Function test_alien_proxy_classes>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_alien.py::test_alien_builtin
            location: ('tests/functional/test_alien.py', 8, 'test_alien_builtin')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_alien_builtin>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_builtin>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_builtin' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_builtin' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_builtin' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_alien_builtin>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_alien_builtin>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_builtin>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_builtin' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_builtin' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_builtin' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_alien_builtin>
            nextitem: <Function test_alien_proxy_classes>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_builtin>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_builtin' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_builtin' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_builtin' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_alien.py::test_alien_builtin
            location: ('tests/functional/test_alien.py', 8, 'test_alien_builtin')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_alien_proxy_classes>
          nextitem: <Function test_alien_python_class>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_alien.py::test_alien_proxy_classes
            location: ('tests/functional/test_alien.py', 25, 'test_alien_proxy_classes')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_alien_proxy_classes>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_proxy_classes>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_proxy_classes' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_proxy_classes' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_proxy_classes' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_alien_proxy_classes>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_alien_proxy_classes>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_proxy_classes>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_proxy_classes' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_proxy_classes' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_proxy_classes' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_alien_proxy_classes>
            nextitem: <Function test_alien_python_class>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_proxy_classes>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_proxy_classes' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_proxy_classes' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_proxy_classes' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_alien.py::test_alien_proxy_classes
            location: ('tests/functional/test_alien.py', 25, 'test_alien_proxy_classes')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_alien_python_class>
          nextitem: <Function test_alien_pydantic_model>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_alien.py::test_alien_python_class
            location: ('tests/functional/test_alien.py', 35, 'test_alien_python_class')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_alien_python_class>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_python_class>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_python_class' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_python_class' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_python_class' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_alien_python_class>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_alien_python_class>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_python_class>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_python_class' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_python_class' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_python_class' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_alien_python_class>
            nextitem: <Function test_alien_pydantic_model>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_python_class>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_python_class' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_python_class' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_python_class' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_alien.py::test_alien_python_class
            location: ('tests/functional/test_alien.py', 35, 'test_alien_python_class')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_alien_pydantic_model>
          nextitem: <Function test_alien_getsetdelitem>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_alien.py::test_alien_pydantic_model
            location: ('tests/functional/test_alien.py', 47, 'test_alien_pydantic_model')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_alien_pydantic_model>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_pydantic_model>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_pydantic_model' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_pydantic_model' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_pydantic_model' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_alien_pydantic_model>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_alien_pydantic_model>
        pytest_runtest_makereport [hook]
            item: <Function test_alien_pydantic_model>
            call: <CallInfo when='call' excinfo=<ExceptionInfo PydanticDeprecatedSince20('The `__fields__` attribute is deprecated, use `model_fields` instead.') tblen=28>>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_pydantic_model' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_pydantic_model' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_pydantic_model' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_alien_pydantic_model>
            call: <CallInfo when='call' excinfo=<ExceptionInfo PydanticDeprecatedSince20('The `__fields__` attribute is deprecated, use `model_fields` instead.') tblen=28>>
            report: <TestReport 'tests/functional/test_alien.py::test_alien_pydantic_model' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_alien_pydantic_model>
            nextitem: <Function test_alien_getsetdelitem>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_pydantic_model>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_pydantic_model' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_pydantic_model' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_pydantic_model' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_alien.py::test_alien_pydantic_model
            location: ('tests/functional/test_alien.py', 47, 'test_alien_pydantic_model')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_alien_getsetdelitem>
          nextitem: <Function test_alien_getsetdelattr>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_alien.py::test_alien_getsetdelitem
            location: ('tests/functional/test_alien.py', 72, 'test_alien_getsetdelitem')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_alien_getsetdelitem>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_getsetdelitem>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelitem' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelitem' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelitem' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_alien_getsetdelitem>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_alien_getsetdelitem>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_getsetdelitem>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelitem' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelitem' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelitem' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_alien_getsetdelitem>
            nextitem: <Function test_alien_getsetdelattr>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_getsetdelitem>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelitem' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelitem' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelitem' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_alien.py::test_alien_getsetdelitem
            location: ('tests/functional/test_alien.py', 72, 'test_alien_getsetdelitem')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_alien_getsetdelattr>
          nextitem: <Function test_client_settings>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_alien.py::test_alien_getsetdelattr
            location: ('tests/functional/test_alien.py', 96, 'test_alien_getsetdelattr')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_alien_getsetdelattr>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_getsetdelattr>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelattr' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelattr' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelattr' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_alien_getsetdelattr>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_alien_getsetdelattr>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_getsetdelattr>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelattr' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelattr' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelattr' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_alien_getsetdelattr>
            nextitem: <Function test_client_settings>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_alien_getsetdelattr>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelattr' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelattr' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_alien.py::test_alien_getsetdelattr' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_alien.py::test_alien_getsetdelattr
            location: ('tests/functional/test_alien.py', 96, 'test_alien_getsetdelattr')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_client_settings>
          nextitem: <Function test_getstate>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_client.py::test_client_settings
            location: ('tests/functional/test_client.py', 6, 'test_client_settings')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_client_settings>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_client_settings>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_client.py::test_client_settings' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_client.py::test_client_settings' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_client.py::test_client_settings' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_client_settings>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_client_settings>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_client_settings>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_client.py::test_client_settings' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_client.py::test_client_settings' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_client.py::test_client_settings' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_client_settings>
            nextitem: <Function test_getstate>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_client_settings>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_client.py::test_client_settings' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_client.py::test_client_settings' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_client.py::test_client_settings' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_client.py::test_client_settings
            location: ('tests/functional/test_client.py', 6, 'test_client_settings')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_getstate>
          nextitem: <Function test_getstate_v2>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_getstate.py::test_getstate
            location: ('tests/functional/test_getstate.py', 6, 'test_getstate')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_getstate>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_getstate>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_getstate>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_getstate>
            nextitem: <Function test_getstate_v2>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_getstate.py::test_getstate
            location: ('tests/functional/test_getstate.py', 6, 'test_getstate')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_getstate_v2>
          nextitem: <Function test_getstate_unload>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_getstate.py::test_getstate_v2
            location: ('tests/functional/test_getstate.py', 16, 'test_getstate_v2')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_getstate_v2>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_v2>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_v2' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_v2' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_v2' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_getstate_v2>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_getstate_v2>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_v2>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_v2' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_v2' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_v2' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_getstate_v2>
            nextitem: <Function test_getstate_unload>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_v2>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_v2' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_v2' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_v2' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_getstate.py::test_getstate_v2
            location: ('tests/functional/test_getstate.py', 16, 'test_getstate_v2')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_getstate_unload>
          nextitem: <Function test_getstate_unload_v2>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_getstate.py::test_getstate_unload
            location: ('tests/functional/test_getstate.py', 28, 'test_getstate_unload')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_getstate_unload>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_unload>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_unload' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_unload' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_unload' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_getstate_unload>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_getstate_unload>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_unload>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_unload' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_unload' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_unload' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_getstate_unload>
            nextitem: <Function test_getstate_unload_v2>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_unload>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_unload' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_unload' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_unload' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_getstate.py::test_getstate_unload
            location: ('tests/functional/test_getstate.py', 28, 'test_getstate_unload')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_getstate_unload_v2>
          nextitem: <Function test_getstate_move>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_getstate.py::test_getstate_unload_v2
            location: ('tests/functional/test_getstate.py', 41, 'test_getstate_unload_v2')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_getstate_unload_v2>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_unload_v2>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_unload_v2' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_unload_v2' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_unload_v2' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_getstate_unload_v2>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_getstate_unload_v2>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_unload_v2>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_unload_v2' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_unload_v2' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_unload_v2' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_getstate_unload_v2>
            nextitem: <Function test_getstate_move>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_unload_v2>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_unload_v2' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_unload_v2' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_unload_v2' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_getstate.py::test_getstate_unload_v2
            location: ('tests/functional/test_getstate.py', 41, 'test_getstate_unload_v2')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_getstate_move>
          nextitem: <Function test_getstate_move_box>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_getstate.py::test_getstate_move
            location: ('tests/functional/test_getstate.py', 54, 'test_getstate_move')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_getstate_move>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_move>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_move' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_getstate_move>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_getstate_move>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_move>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_move' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_getstate_move>
            nextitem: <Function test_getstate_move_box>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_move>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_move' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_getstate.py::test_getstate_move
            location: ('tests/functional/test_getstate.py', 54, 'test_getstate_move')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_getstate_move_box>
          nextitem: <Function test_getstate_move_box_recursive>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_getstate.py::test_getstate_move_box
            location: ('tests/functional/test_getstate.py', 67, 'test_getstate_move_box')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_getstate_move_box>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_move_box>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_getstate_move_box>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_getstate_move_box>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_move_box>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_getstate_move_box>
            nextitem: <Function test_getstate_move_box_recursive>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_move_box>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_getstate.py::test_getstate_move_box
            location: ('tests/functional/test_getstate.py', 67, 'test_getstate_move_box')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_getstate_move_box_recursive>
          nextitem: <Function test_self_is_not_unloaded>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_getstate.py::test_getstate_move_box_recursive
            location: ('tests/functional/test_getstate.py', 81, 'test_getstate_move_box_recursive')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_getstate_move_box_recursive>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_move_box_recursive>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box_recursive' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box_recursive' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box_recursive' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_getstate_move_box_recursive>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_getstate_move_box_recursive>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_move_box_recursive>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box_recursive' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box_recursive' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box_recursive' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_getstate_move_box_recursive>
            nextitem: <Function test_self_is_not_unloaded>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_getstate_move_box_recursive>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box_recursive' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box_recursive' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_getstate.py::test_getstate_move_box_recursive' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_getstate.py::test_getstate_move_box_recursive
            location: ('tests/functional/test_getstate.py', 81, 'test_getstate_move_box_recursive')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_self_is_not_unloaded>
          nextitem: <Function test_reference_is_unloaded>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_heapmanager.py::test_self_is_not_unloaded
            location: ('tests/functional/test_heapmanager.py', 4, 'test_self_is_not_unloaded')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_self_is_not_unloaded>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_self_is_not_unloaded>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_heapmanager.py::test_self_is_not_unloaded' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_heapmanager.py::test_self_is_not_unloaded' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_heapmanager.py::test_self_is_not_unloaded' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_self_is_not_unloaded>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_self_is_not_unloaded>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_self_is_not_unloaded>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_heapmanager.py::test_self_is_not_unloaded' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_heapmanager.py::test_self_is_not_unloaded' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_heapmanager.py::test_self_is_not_unloaded' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_self_is_not_unloaded>
            nextitem: <Function test_reference_is_unloaded>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_self_is_not_unloaded>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_heapmanager.py::test_self_is_not_unloaded' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_heapmanager.py::test_self_is_not_unloaded' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_heapmanager.py::test_self_is_not_unloaded' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_heapmanager.py::test_self_is_not_unloaded
            location: ('tests/functional/test_heapmanager.py', 4, 'test_self_is_not_unloaded')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_reference_is_unloaded>
          nextitem: <Function test_unloaded_get_property>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_heapmanager.py::test_reference_is_unloaded
            location: ('tests/functional/test_heapmanager.py', 11, 'test_reference_is_unloaded')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_reference_is_unloaded>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_reference_is_unloaded>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_heapmanager.py::test_reference_is_unloaded' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_heapmanager.py::test_reference_is_unloaded' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_heapmanager.py::test_reference_is_unloaded' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_reference_is_unloaded>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_reference_is_unloaded>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_reference_is_unloaded>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_heapmanager.py::test_reference_is_unloaded' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_heapmanager.py::test_reference_is_unloaded' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_heapmanager.py::test_reference_is_unloaded' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_reference_is_unloaded>
            nextitem: <Function test_unloaded_get_property>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_reference_is_unloaded>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_heapmanager.py::test_reference_is_unloaded' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_heapmanager.py::test_reference_is_unloaded' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_heapmanager.py::test_reference_is_unloaded' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_heapmanager.py::test_reference_is_unloaded
            location: ('tests/functional/test_heapmanager.py', 11, 'test_reference_is_unloaded')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_unloaded_get_property>
          nextitem: <Function test_unloaded_set_property>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_heapmanager.py::test_unloaded_get_property
            location: ('tests/functional/test_heapmanager.py', 18, 'test_unloaded_get_property')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_unloaded_get_property>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unloaded_get_property>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_get_property' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_get_property' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_get_property' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_unloaded_get_property>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_unloaded_get_property>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unloaded_get_property>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_get_property' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_get_property' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_get_property' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_unloaded_get_property>
            nextitem: <Function test_unloaded_set_property>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unloaded_get_property>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_get_property' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_get_property' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_get_property' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_heapmanager.py::test_unloaded_get_property
            location: ('tests/functional/test_heapmanager.py', 18, 'test_unloaded_get_property')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_unloaded_set_property>
          nextitem: <Function test_load_from_inmemory>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_heapmanager.py::test_unloaded_set_property
            location: ('tests/functional/test_heapmanager.py', 29, 'test_unloaded_set_property')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_unloaded_set_property>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unloaded_set_property>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_set_property' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_set_property' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_set_property' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_unloaded_set_property>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_unloaded_set_property>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unloaded_set_property>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_set_property' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_set_property' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_set_property' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_unloaded_set_property>
            nextitem: <Function test_load_from_inmemory>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unloaded_set_property>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_set_property' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_set_property' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_heapmanager.py::test_unloaded_set_property' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_heapmanager.py::test_unloaded_set_property
            location: ('tests/functional/test_heapmanager.py', 29, 'test_unloaded_set_property')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_load_from_inmemory>
          nextitem: <Function test_make_persistent_basic>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_heapmanager.py::test_load_from_inmemory
            location: ('tests/functional/test_heapmanager.py', 41, 'test_load_from_inmemory')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_load_from_inmemory>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_load_from_inmemory>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_heapmanager.py::test_load_from_inmemory' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_heapmanager.py::test_load_from_inmemory' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_heapmanager.py::test_load_from_inmemory' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_load_from_inmemory>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_load_from_inmemory>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_load_from_inmemory>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_heapmanager.py::test_load_from_inmemory' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_heapmanager.py::test_load_from_inmemory' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_heapmanager.py::test_load_from_inmemory' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_load_from_inmemory>
            nextitem: <Function test_make_persistent_basic>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_load_from_inmemory>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_heapmanager.py::test_load_from_inmemory' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_heapmanager.py::test_load_from_inmemory' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_heapmanager.py::test_load_from_inmemory' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_heapmanager.py::test_load_from_inmemory
            location: ('tests/functional/test_heapmanager.py', 41, 'test_load_from_inmemory')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_make_persistent_basic>
          nextitem: <Coroutine test_make_persistent_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_basic
            location: ('tests/functional/test_make_persistent.py', 6, 'test_make_persistent_basic')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_make_persistent_basic>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_basic>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_basic' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_basic' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_basic' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_make_persistent_basic>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_make_persistent_basic>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_basic>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_basic' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_basic' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_basic' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_make_persistent_basic>
            nextitem: <Coroutine test_make_persistent_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_basic>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_basic' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_basic' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_basic' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_basic
            location: ('tests/functional/test_make_persistent.py', 6, 'test_make_persistent_basic')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_make_persistent_async>
          nextitem: <Function test_make_persistent_alias>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_async
            location: ('tests/functional/test_make_persistent.py', 20, 'test_make_persistent_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_make_persistent_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_make_persistent_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_make_persistent_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_make_persistent_async>
            nextitem: <Function test_make_persistent_alias>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_async
            location: ('tests/functional/test_make_persistent.py', 20, 'test_make_persistent_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_make_persistent_alias>
          nextitem: <Coroutine test_make_persistent_alias_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_alias
            location: ('tests/functional/test_make_persistent.py', 35, 'test_make_persistent_alias')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_make_persistent_alias>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_alias>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_make_persistent_alias>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_make_persistent_alias>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_alias>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_make_persistent_alias>
            nextitem: <Coroutine test_make_persistent_alias_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_alias>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_alias
            location: ('tests/functional/test_make_persistent.py', 35, 'test_make_persistent_alias')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_make_persistent_alias_async>
          nextitem: <Function test_make_persistent_recursive>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_alias_async
            location: ('tests/functional/test_make_persistent.py', 50, 'test_make_persistent_alias_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_make_persistent_alias_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_alias_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_make_persistent_alias_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_make_persistent_alias_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_alias_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_make_persistent_alias_async>
            nextitem: <Function test_make_persistent_recursive>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_alias_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_alias_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_alias_async
            location: ('tests/functional/test_make_persistent.py', 50, 'test_make_persistent_alias_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_make_persistent_recursive>
          nextitem: <Coroutine test_make_persistent_recursive_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_recursive
            location: ('tests/functional/test_make_persistent.py', 66, 'test_make_persistent_recursive')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_make_persistent_recursive>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_recursive>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_make_persistent_recursive>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_make_persistent_recursive>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_recursive>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_make_persistent_recursive>
            nextitem: <Coroutine test_make_persistent_recursive_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_recursive>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_recursive
            location: ('tests/functional/test_make_persistent.py', 66, 'test_make_persistent_recursive')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_make_persistent_recursive_async>
          nextitem: <Function test_make_persistent_cycle>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_recursive_async
            location: ('tests/functional/test_make_persistent.py', 86, 'test_make_persistent_recursive_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_make_persistent_recursive_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_recursive_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_make_persistent_recursive_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_make_persistent_recursive_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_recursive_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_make_persistent_recursive_async>
            nextitem: <Function test_make_persistent_cycle>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_recursive_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_recursive_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_recursive_async
            location: ('tests/functional/test_make_persistent.py', 86, 'test_make_persistent_recursive_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_make_persistent_cycle>
          nextitem: <Coroutine test_make_persistent_cycle_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_cycle
            location: ('tests/functional/test_make_persistent.py', 107, 'test_make_persistent_cycle')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_make_persistent_cycle>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_cycle>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_make_persistent_cycle>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_make_persistent_cycle>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_cycle>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_make_persistent_cycle>
            nextitem: <Coroutine test_make_persistent_cycle_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_cycle>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_cycle
            location: ('tests/functional/test_make_persistent.py', 107, 'test_make_persistent_cycle')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_make_persistent_cycle_async>
          nextitem: <Function test_make_persistent_backend_id>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_cycle_async
            location: ('tests/functional/test_make_persistent.py', 124, 'test_make_persistent_cycle_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_make_persistent_cycle_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_cycle_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_make_persistent_cycle_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_make_persistent_cycle_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_cycle_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_make_persistent_cycle_async>
            nextitem: <Function test_make_persistent_backend_id>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_cycle_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_cycle_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_cycle_async
            location: ('tests/functional/test_make_persistent.py', 124, 'test_make_persistent_cycle_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_make_persistent_backend_id>
          nextitem: <Coroutine test_make_persistent_backend_id_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_backend_id
            location: ('tests/functional/test_make_persistent.py', 142, 'test_make_persistent_backend_id')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_make_persistent_backend_id>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_backend_id>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_make_persistent_backend_id>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_make_persistent_backend_id>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_backend_id>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_make_persistent_backend_id>
            nextitem: <Coroutine test_make_persistent_backend_id_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_backend_id>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_backend_id
            location: ('tests/functional/test_make_persistent.py', 142, 'test_make_persistent_backend_id')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_make_persistent_backend_id_async>
          nextitem: <Function test_make_persistent_already_registered>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_backend_id_async
            location: ('tests/functional/test_make_persistent.py', 157, 'test_make_persistent_backend_id_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_make_persistent_backend_id_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_backend_id_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_make_persistent_backend_id_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_make_persistent_backend_id_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_backend_id_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_make_persistent_backend_id_async>
            nextitem: <Function test_make_persistent_already_registered>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_backend_id_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_backend_id_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_backend_id_async
            location: ('tests/functional/test_make_persistent.py', 157, 'test_make_persistent_backend_id_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_make_persistent_already_registered>
          nextitem: <Coroutine test_make_persistent_already_registered_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_already_registered
            location: ('tests/functional/test_make_persistent.py', 173, 'test_make_persistent_already_registered')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_make_persistent_already_registered>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_already_registered>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_make_persistent_already_registered>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_make_persistent_already_registered>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_already_registered>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_make_persistent_already_registered>
            nextitem: <Coroutine test_make_persistent_already_registered_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make_persistent_already_registered>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_already_registered
            location: ('tests/functional/test_make_persistent.py', 173, 'test_make_persistent_already_registered')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_make_persistent_already_registered_async>
          nextitem: <Function test_persistent_references>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_already_registered_async
            location: ('tests/functional/test_make_persistent.py', 193, 'test_make_persistent_already_registered_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_make_persistent_already_registered_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_already_registered_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_make_persistent_already_registered_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_make_persistent_already_registered_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_already_registered_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_make_persistent_already_registered_async>
            nextitem: <Function test_persistent_references>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_make_persistent_already_registered_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_make_persistent_already_registered_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_make_persistent_already_registered_async
            location: ('tests/functional/test_make_persistent.py', 193, 'test_make_persistent_already_registered_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_persistent_references>
          nextitem: <Coroutine test_persistent_references_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_persistent_references
            location: ('tests/functional/test_make_persistent.py', 214, 'test_persistent_references')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_persistent_references>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_persistent_references>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_persistent_references>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_persistent_references>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_persistent_references>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_persistent_references>
            nextitem: <Coroutine test_persistent_references_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_persistent_references>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_persistent_references
            location: ('tests/functional/test_make_persistent.py', 214, 'test_persistent_references')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_persistent_references_async>
          nextitem: <Function test_remote_automatic_register>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_persistent_references_async
            location: ('tests/functional/test_make_persistent.py', 228, 'test_persistent_references_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_persistent_references_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_persistent_references_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_persistent_references_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_persistent_references_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_persistent_references_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_persistent_references_async>
            nextitem: <Function test_remote_automatic_register>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_persistent_references_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_persistent_references_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_persistent_references_async
            location: ('tests/functional/test_make_persistent.py', 228, 'test_persistent_references_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_remote_automatic_register>
          nextitem: <Function test_remote_make_persistent>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_remote_automatic_register
            location: ('tests/functional/test_make_persistent.py', 246, 'test_remote_automatic_register')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_remote_automatic_register>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_remote_automatic_register>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_remote_automatic_register' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_automatic_register' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_automatic_register' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_remote_automatic_register>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_remote_automatic_register>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_remote_automatic_register>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_remote_automatic_register' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_automatic_register' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_automatic_register' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_remote_automatic_register>
            nextitem: <Function test_remote_make_persistent>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_remote_automatic_register>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_remote_automatic_register' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_automatic_register' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_automatic_register' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_remote_automatic_register
            location: ('tests/functional/test_make_persistent.py', 246, 'test_remote_automatic_register')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_remote_make_persistent>
          nextitem: <Function test_remote_make_persistent_alias>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_remote_make_persistent
            location: ('tests/functional/test_make_persistent.py', 252, 'test_remote_make_persistent')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_remote_make_persistent>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_remote_make_persistent>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_remote_make_persistent>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_remote_make_persistent>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_remote_make_persistent>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_remote_make_persistent>
            nextitem: <Function test_remote_make_persistent_alias>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_remote_make_persistent>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_remote_make_persistent
            location: ('tests/functional/test_make_persistent.py', 252, 'test_remote_make_persistent')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_remote_make_persistent_alias>
          nextitem: <Function test_remote_make_persistent_backend>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_remote_make_persistent_alias
            location: ('tests/functional/test_make_persistent.py', 258, 'test_remote_make_persistent_alias')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_remote_make_persistent_alias>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_remote_make_persistent_alias>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_alias' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_alias' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_alias' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_remote_make_persistent_alias>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_remote_make_persistent_alias>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_remote_make_persistent_alias>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_alias' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_alias' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_alias' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_remote_make_persistent_alias>
            nextitem: <Function test_remote_make_persistent_backend>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_remote_make_persistent_alias>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_alias' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_alias' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_alias' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_remote_make_persistent_alias
            location: ('tests/functional/test_make_persistent.py', 258, 'test_remote_make_persistent_alias')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_remote_make_persistent_backend>
          nextitem: <Function test_move_object>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_make_persistent.py::test_remote_make_persistent_backend
            location: ('tests/functional/test_make_persistent.py', 264, 'test_remote_make_persistent_backend')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_remote_make_persistent_backend>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_remote_make_persistent_backend>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_backend' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_backend' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_backend' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_remote_make_persistent_backend>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_remote_make_persistent_backend>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_remote_make_persistent_backend>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_backend' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_backend' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_backend' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_remote_make_persistent_backend>
            nextitem: <Function test_move_object>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_remote_make_persistent_backend>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_backend' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_backend' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_make_persistent.py::test_remote_make_persistent_backend' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_make_persistent.py::test_remote_make_persistent_backend
            location: ('tests/functional/test_make_persistent.py', 264, 'test_remote_make_persistent_backend')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_move_object>
          nextitem: <Coroutine test_move_object_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_object
            location: ('tests/functional/test_move_object.py', 7, 'test_move_object')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_move_object>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_object>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_object' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_object' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_object' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_move_object>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_move_object>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_object>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_object' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_object' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_object' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_move_object>
            nextitem: <Coroutine test_move_object_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_object>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_object' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_object' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_object' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_object
            location: ('tests/functional/test_move_object.py', 7, 'test_move_object')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_move_object_async>
          nextitem: <Function test_recursive_move>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_object_async
            location: ('tests/functional/test_move_object.py', 18, 'test_move_object_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_move_object_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_object_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_object_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_object_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_object_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_object_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_move_object_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_move_object_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_object_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_object_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_object_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_object_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_move_object_async>
            nextitem: <Function test_recursive_move>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_object_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_object_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_object_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_object_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_object_async
            location: ('tests/functional/test_move_object.py', 18, 'test_move_object_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_recursive_move>
          nextitem: <Coroutine test_recursive_move_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_recursive_move
            location: ('tests/functional/test_move_object.py', 30, 'test_recursive_move')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_recursive_move>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_recursive_move>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_recursive_move' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_recursive_move' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_recursive_move' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_recursive_move>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_recursive_move>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_recursive_move>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_recursive_move' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_recursive_move' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_recursive_move' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_recursive_move>
            nextitem: <Coroutine test_recursive_move_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_recursive_move>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_recursive_move' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_recursive_move' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_recursive_move' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_recursive_move
            location: ('tests/functional/test_move_object.py', 30, 'test_recursive_move')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_recursive_move_async>
          nextitem: <Function test_not_recursive_move>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_recursive_move_async
            location: ('tests/functional/test_move_object.py', 50, 'test_recursive_move_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_recursive_move_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_recursive_move_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_recursive_move_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_recursive_move_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_recursive_move_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_recursive_move_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_recursive_move_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_recursive_move_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_recursive_move_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_recursive_move_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_recursive_move_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_recursive_move_async>
            nextitem: <Function test_not_recursive_move>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_recursive_move_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_recursive_move_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_recursive_move_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_recursive_move_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_recursive_move_async
            location: ('tests/functional/test_move_object.py', 50, 'test_recursive_move_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_not_recursive_move>
          nextitem: <Coroutine test_not_recursive_move_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_not_recursive_move
            location: ('tests/functional/test_move_object.py', 71, 'test_not_recursive_move')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_not_recursive_move>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_not_recursive_move>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_not_recursive_move>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_not_recursive_move>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_not_recursive_move>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_not_recursive_move>
            nextitem: <Coroutine test_not_recursive_move_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_not_recursive_move>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_not_recursive_move
            location: ('tests/functional/test_move_object.py', 71, 'test_not_recursive_move')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_not_recursive_move_async>
          nextitem: <Function test_move_unload_object>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_not_recursive_move_async
            location: ('tests/functional/test_move_object.py', 85, 'test_not_recursive_move_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_not_recursive_move_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_not_recursive_move_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_not_recursive_move_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_not_recursive_move_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_not_recursive_move_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_not_recursive_move_async>
            nextitem: <Function test_move_unload_object>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_not_recursive_move_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_not_recursive_move_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_not_recursive_move_async
            location: ('tests/functional/test_move_object.py', 85, 'test_not_recursive_move_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_move_unload_object>
          nextitem: <Coroutine test_move_unload_object_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_unload_object
            location: ('tests/functional/test_move_object.py', 100, 'test_move_unload_object')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_move_unload_object>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_unload_object>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_unload_object' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_move_unload_object>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_move_unload_object>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_unload_object>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_unload_object' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_move_unload_object>
            nextitem: <Coroutine test_move_unload_object_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_unload_object>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_unload_object' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_unload_object
            location: ('tests/functional/test_move_object.py', 100, 'test_move_unload_object')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_move_unload_object_async>
          nextitem: <Function test_move_unload_object_reference>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_unload_object_async
            location: ('tests/functional/test_move_object.py', 118, 'test_move_unload_object_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_move_unload_object_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_unload_object_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_move_unload_object_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_move_unload_object_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_unload_object_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_move_unload_object_async>
            nextitem: <Function test_move_unload_object_reference>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_unload_object_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_unload_object_async
            location: ('tests/functional/test_move_object.py', 118, 'test_move_unload_object_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_move_unload_object_reference>
          nextitem: <Coroutine test_move_unload_object_reference_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_unload_object_reference
            location: ('tests/functional/test_move_object.py', 137, 'test_move_unload_object_reference')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_move_unload_object_reference>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_unload_object_reference>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_move_unload_object_reference>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_move_unload_object_reference>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_unload_object_reference>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_move_unload_object_reference>
            nextitem: <Coroutine test_move_unload_object_reference_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_unload_object_reference>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_unload_object_reference
            location: ('tests/functional/test_move_object.py', 137, 'test_move_unload_object_reference')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_move_unload_object_reference_async>
          nextitem: <Function test_move_reference>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_unload_object_reference_async
            location: ('tests/functional/test_move_object.py', 157, 'test_move_unload_object_reference_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_move_unload_object_reference_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_unload_object_reference_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_move_unload_object_reference_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_move_unload_object_reference_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_unload_object_reference_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_move_unload_object_reference_async>
            nextitem: <Function test_move_reference>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_unload_object_reference_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_unload_object_reference_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_unload_object_reference_async
            location: ('tests/functional/test_move_object.py', 157, 'test_move_unload_object_reference_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_move_reference>
          nextitem: <Coroutine test_move_reference_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_reference
            location: ('tests/functional/test_move_object.py', 178, 'test_move_reference')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_move_reference>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_reference>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_reference' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_reference' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_reference' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_move_reference>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_move_reference>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_reference>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_reference' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_reference' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_reference' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_move_reference>
            nextitem: <Coroutine test_move_reference_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_reference>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_reference' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_reference' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_reference' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_reference
            location: ('tests/functional/test_move_object.py', 178, 'test_move_reference')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_move_reference_async>
          nextitem: <Function test_wrong_backend_id>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_reference_async
            location: ('tests/functional/test_move_object.py', 194, 'test_move_reference_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_move_reference_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_reference_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_reference_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_reference_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_reference_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_move_reference_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_move_reference_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_reference_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_reference_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_reference_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_reference_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_move_reference_async>
            nextitem: <Function test_wrong_backend_id>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_reference_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_reference_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_reference_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_reference_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_reference_async
            location: ('tests/functional/test_move_object.py', 194, 'test_move_reference_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_wrong_backend_id>
          nextitem: <Coroutine test_wrong_backend_id_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_wrong_backend_id
            location: ('tests/functional/test_move_object.py', 211, 'test_wrong_backend_id')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_wrong_backend_id>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_wrong_backend_id>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_wrong_backend_id>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_wrong_backend_id>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_wrong_backend_id>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_wrong_backend_id>
            nextitem: <Coroutine test_wrong_backend_id_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_wrong_backend_id>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_wrong_backend_id
            location: ('tests/functional/test_move_object.py', 211, 'test_wrong_backend_id')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_wrong_backend_id_async>
          nextitem: <Function test_move_recursive_remotes>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_wrong_backend_id_async
            location: ('tests/functional/test_move_object.py', 227, 'test_wrong_backend_id_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_wrong_backend_id_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_wrong_backend_id_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_wrong_backend_id_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_wrong_backend_id_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_wrong_backend_id_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_wrong_backend_id_async>
            nextitem: <Function test_move_recursive_remotes>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_wrong_backend_id_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_wrong_backend_id_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_wrong_backend_id_async
            location: ('tests/functional/test_move_object.py', 227, 'test_wrong_backend_id_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_move_recursive_remotes>
          nextitem: <Coroutine test_move_recursive_remotes_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_remotes
            location: ('tests/functional/test_move_object.py', 244, 'test_move_recursive_remotes')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_move_recursive_remotes>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_remotes>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_move_recursive_remotes>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_move_recursive_remotes>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_remotes>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_move_recursive_remotes>
            nextitem: <Coroutine test_move_recursive_remotes_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_remotes>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_remotes
            location: ('tests/functional/test_move_object.py', 244, 'test_move_recursive_remotes')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_move_recursive_remotes_async>
          nextitem: <Function test_move_recursive_not_remotes>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_remotes_async
            location: ('tests/functional/test_move_object.py', 260, 'test_move_recursive_remotes_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_move_recursive_remotes_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_remotes_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_move_recursive_remotes_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_move_recursive_remotes_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_remotes_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_move_recursive_remotes_async>
            nextitem: <Function test_move_recursive_not_remotes>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_remotes_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_remotes_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_remotes_async
            location: ('tests/functional/test_move_object.py', 260, 'test_move_recursive_remotes_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_move_recursive_not_remotes>
          nextitem: <Coroutine test_move_recursive_not_remotes_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_not_remotes
            location: ('tests/functional/test_move_object.py', 277, 'test_move_recursive_not_remotes')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_move_recursive_not_remotes>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_not_remotes>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_move_recursive_not_remotes>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_move_recursive_not_remotes>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_not_remotes>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_move_recursive_not_remotes>
            nextitem: <Coroutine test_move_recursive_not_remotes_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_not_remotes>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_not_remotes
            location: ('tests/functional/test_move_object.py', 277, 'test_move_recursive_not_remotes')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_move_recursive_not_remotes_async>
          nextitem: <Function test_move_recursive_reference_of_reference_v1>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_not_remotes_async
            location: ('tests/functional/test_move_object.py', 297, 'test_move_recursive_not_remotes_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_move_recursive_not_remotes_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_not_remotes_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_move_recursive_not_remotes_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_move_recursive_not_remotes_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_not_remotes_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_move_recursive_not_remotes_async>
            nextitem: <Function test_move_recursive_reference_of_reference_v1>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_not_remotes_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_not_remotes_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_not_remotes_async
            location: ('tests/functional/test_move_object.py', 297, 'test_move_recursive_not_remotes_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_move_recursive_reference_of_reference_v1>
          nextitem: <Coroutine test_move_recursive_reference_of_reference_v1_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1
            location: ('tests/functional/test_move_object.py', 318, 'test_move_recursive_reference_of_reference_v1')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_move_recursive_reference_of_reference_v1>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_of_reference_v1>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_move_recursive_reference_of_reference_v1>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_move_recursive_reference_of_reference_v1>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_of_reference_v1>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_move_recursive_reference_of_reference_v1>
            nextitem: <Coroutine test_move_recursive_reference_of_reference_v1_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_of_reference_v1>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1
            location: ('tests/functional/test_move_object.py', 318, 'test_move_recursive_reference_of_reference_v1')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_move_recursive_reference_of_reference_v1_async>
          nextitem: <Function test_move_recursive_reference_of_reference_v2>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1_async
            location: ('tests/functional/test_move_object.py', 349, 'test_move_recursive_reference_of_reference_v1_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v1_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v1_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v1_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_move_recursive_reference_of_reference_v1_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v1_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v1_async>
            nextitem: <Function test_move_recursive_reference_of_reference_v2>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v1_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v1_async
            location: ('tests/functional/test_move_object.py', 349, 'test_move_recursive_reference_of_reference_v1_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_move_recursive_reference_of_reference_v2>
          nextitem: <Coroutine test_move_recursive_reference_of_reference_v2_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2
            location: ('tests/functional/test_move_object.py', 381, 'test_move_recursive_reference_of_reference_v2')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_move_recursive_reference_of_reference_v2>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_of_reference_v2>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_move_recursive_reference_of_reference_v2>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_move_recursive_reference_of_reference_v2>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_of_reference_v2>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_move_recursive_reference_of_reference_v2>
            nextitem: <Coroutine test_move_recursive_reference_of_reference_v2_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_of_reference_v2>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2
            location: ('tests/functional/test_move_object.py', 381, 'test_move_recursive_reference_of_reference_v2')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_move_recursive_reference_of_reference_v2_async>
          nextitem: <Function test_move_recursive_reference_of_reference_v3>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2_async
            location: ('tests/functional/test_move_object.py', 412, 'test_move_recursive_reference_of_reference_v2_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v2_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v2_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v2_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_move_recursive_reference_of_reference_v2_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v2_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v2_async>
            nextitem: <Function test_move_recursive_reference_of_reference_v3>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v2_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v2_async
            location: ('tests/functional/test_move_object.py', 412, 'test_move_recursive_reference_of_reference_v2_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_move_recursive_reference_of_reference_v3>
          nextitem: <Coroutine test_move_recursive_reference_of_reference_v3_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3
            location: ('tests/functional/test_move_object.py', 444, 'test_move_recursive_reference_of_reference_v3')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_move_recursive_reference_of_reference_v3>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_of_reference_v3>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_move_recursive_reference_of_reference_v3>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_move_recursive_reference_of_reference_v3>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_of_reference_v3>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_move_recursive_reference_of_reference_v3>
            nextitem: <Coroutine test_move_recursive_reference_of_reference_v3_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_of_reference_v3>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3
            location: ('tests/functional/test_move_object.py', 444, 'test_move_recursive_reference_of_reference_v3')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_move_recursive_reference_of_reference_v3_async>
          nextitem: <Function test_move_recursive_reference_of_reference_v4>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3_async
            location: ('tests/functional/test_move_object.py', 475, 'test_move_recursive_reference_of_reference_v3_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v3_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v3_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v3_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_move_recursive_reference_of_reference_v3_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v3_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v3_async>
            nextitem: <Function test_move_recursive_reference_of_reference_v4>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v3_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v3_async
            location: ('tests/functional/test_move_object.py', 475, 'test_move_recursive_reference_of_reference_v3_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_move_recursive_reference_of_reference_v4>
          nextitem: <Coroutine test_move_recursive_reference_of_reference_v4_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4
            location: ('tests/functional/test_move_object.py', 507, 'test_move_recursive_reference_of_reference_v4')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_move_recursive_reference_of_reference_v4>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_of_reference_v4>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_move_recursive_reference_of_reference_v4>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_move_recursive_reference_of_reference_v4>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_of_reference_v4>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_move_recursive_reference_of_reference_v4>
            nextitem: <Coroutine test_move_recursive_reference_of_reference_v4_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_of_reference_v4>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4
            location: ('tests/functional/test_move_object.py', 507, 'test_move_recursive_reference_of_reference_v4')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_move_recursive_reference_of_reference_v4_async>
          nextitem: <Function test_move_recursive_reference_cycle_v1>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4_async
            location: ('tests/functional/test_move_object.py', 538, 'test_move_recursive_reference_of_reference_v4_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v4_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v4_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v4_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_move_recursive_reference_of_reference_v4_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v4_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v4_async>
            nextitem: <Function test_move_recursive_reference_cycle_v1>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_of_reference_v4_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_of_reference_v4_async
            location: ('tests/functional/test_move_object.py', 538, 'test_move_recursive_reference_of_reference_v4_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_move_recursive_reference_cycle_v1>
          nextitem: <Coroutine test_move_recursive_reference_cycle_v1_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1
            location: ('tests/functional/test_move_object.py', 570, 'test_move_recursive_reference_cycle_v1')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_move_recursive_reference_cycle_v1>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_cycle_v1>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_move_recursive_reference_cycle_v1>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_move_recursive_reference_cycle_v1>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_cycle_v1>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_move_recursive_reference_cycle_v1>
            nextitem: <Coroutine test_move_recursive_reference_cycle_v1_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_cycle_v1>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1
            location: ('tests/functional/test_move_object.py', 570, 'test_move_recursive_reference_cycle_v1')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_move_recursive_reference_cycle_v1_async>
          nextitem: <Function test_move_recursive_reference_cycle_v2>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1_async
            location: ('tests/functional/test_move_object.py', 592, 'test_move_recursive_reference_cycle_v1_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_move_recursive_reference_cycle_v1_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_cycle_v1_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_move_recursive_reference_cycle_v1_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_move_recursive_reference_cycle_v1_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_cycle_v1_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_move_recursive_reference_cycle_v1_async>
            nextitem: <Function test_move_recursive_reference_cycle_v2>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_cycle_v1_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v1_async
            location: ('tests/functional/test_move_object.py', 592, 'test_move_recursive_reference_cycle_v1_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_move_recursive_reference_cycle_v2>
          nextitem: <Coroutine test_move_recursive_reference_cycle_v2_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2
            location: ('tests/functional/test_move_object.py', 615, 'test_move_recursive_reference_cycle_v2')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_move_recursive_reference_cycle_v2>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_cycle_v2>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_move_recursive_reference_cycle_v2>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_move_recursive_reference_cycle_v2>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_cycle_v2>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_move_recursive_reference_cycle_v2>
            nextitem: <Coroutine test_move_recursive_reference_cycle_v2_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_recursive_reference_cycle_v2>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2
            location: ('tests/functional/test_move_object.py', 615, 'test_move_recursive_reference_cycle_v2')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_move_recursive_reference_cycle_v2_async>
          nextitem: <Function test_move_local_object>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2_async
            location: ('tests/functional/test_move_object.py', 637, 'test_move_recursive_reference_cycle_v2_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_move_recursive_reference_cycle_v2_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_cycle_v2_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_move_recursive_reference_cycle_v2_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_move_recursive_reference_cycle_v2_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_cycle_v2_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_move_recursive_reference_cycle_v2_async>
            nextitem: <Function test_move_local_object>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_recursive_reference_cycle_v2_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_recursive_reference_cycle_v2_async
            location: ('tests/functional/test_move_object.py', 637, 'test_move_recursive_reference_cycle_v2_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_move_local_object>
          nextitem: <Coroutine test_move_local_object_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_local_object
            location: ('tests/functional/test_move_object.py', 660, 'test_move_local_object')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_move_local_object>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_local_object>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_local_object' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_move_local_object>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_move_local_object>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_local_object>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_local_object' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_move_local_object>
            nextitem: <Coroutine test_move_local_object_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_local_object>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_local_object' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_local_object
            location: ('tests/functional/test_move_object.py', 660, 'test_move_local_object')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_move_local_object_async>
          nextitem: <Function test_move_local_object_recursive_remotes>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_local_object_async
            location: ('tests/functional/test_move_object.py', 680, 'test_move_local_object_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_move_local_object_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_local_object_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_local_object_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_move_local_object_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_move_local_object_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_local_object_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_local_object_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_move_local_object_async>
            nextitem: <Function test_move_local_object_recursive_remotes>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_local_object_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_local_object_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_local_object_async
            location: ('tests/functional/test_move_object.py', 680, 'test_move_local_object_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_move_local_object_recursive_remotes>
          nextitem: <Coroutine test_move_local_object_recursive_remotes_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_local_object_recursive_remotes
            location: ('tests/functional/test_move_object.py', 701, 'test_move_local_object_recursive_remotes')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_move_local_object_recursive_remotes>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_local_object_recursive_remotes>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_move_local_object_recursive_remotes>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_move_local_object_recursive_remotes>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_local_object_recursive_remotes>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_move_local_object_recursive_remotes>
            nextitem: <Coroutine test_move_local_object_recursive_remotes_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_move_local_object_recursive_remotes>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_local_object_recursive_remotes
            location: ('tests/functional/test_move_object.py', 701, 'test_move_local_object_recursive_remotes')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_move_local_object_recursive_remotes_async>
          nextitem: <Function test_new_replica>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_move_object.py::test_move_local_object_recursive_remotes_async
            location: ('tests/functional/test_move_object.py', 732, 'test_move_local_object_recursive_remotes_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_move_local_object_recursive_remotes_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_local_object_recursive_remotes_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_move_local_object_recursive_remotes_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_move_local_object_recursive_remotes_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_local_object_recursive_remotes_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_move_local_object_recursive_remotes_async>
            nextitem: <Function test_new_replica>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_move_local_object_recursive_remotes_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_move_object.py::test_move_local_object_recursive_remotes_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_move_object.py::test_move_local_object_recursive_remotes_async
            location: ('tests/functional/test_move_object.py', 732, 'test_move_local_object_recursive_remotes_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_new_replica>
          nextitem: <Coroutine test_new_replica_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_new_replica.py::test_new_replica
            location: ('tests/functional/test_new_replica.py', 5, 'test_new_replica')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_new_replica>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_new_replica>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_new_replica.py::test_new_replica' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_new_replica.py::test_new_replica' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_new_replica.py::test_new_replica' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_new_replica>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_new_replica>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_new_replica>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_new_replica.py::test_new_replica' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_new_replica.py::test_new_replica' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_new_replica.py::test_new_replica' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_new_replica>
            nextitem: <Coroutine test_new_replica_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_new_replica>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_new_replica.py::test_new_replica' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_new_replica.py::test_new_replica' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_new_replica.py::test_new_replica' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_new_replica.py::test_new_replica
            location: ('tests/functional/test_new_replica.py', 5, 'test_new_replica')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_new_replica_async>
          nextitem: <Function test_new_version_and_consolidate>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_new_replica.py::test_new_replica_async
            location: ('tests/functional/test_new_replica.py', 23, 'test_new_replica_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_new_replica_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_new_replica_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_new_replica.py::test_new_replica_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_new_replica.py::test_new_replica_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_new_replica.py::test_new_replica_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_new_replica_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_new_replica_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_new_replica_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_new_replica.py::test_new_replica_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_new_replica.py::test_new_replica_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_new_replica.py::test_new_replica_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_new_replica_async>
            nextitem: <Function test_new_version_and_consolidate>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_new_replica_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_new_replica.py::test_new_replica_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_new_replica.py::test_new_replica_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_new_replica.py::test_new_replica_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_new_replica.py::test_new_replica_async
            location: ('tests/functional/test_new_replica.py', 23, 'test_new_replica_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_new_version_and_consolidate>
          nextitem: <Coroutine test_new_version_and_consolidate_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_versioning.py::test_new_version_and_consolidate
            location: ('tests/functional/test_versioning.py', 7, 'test_new_version_and_consolidate')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_new_version_and_consolidate>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_new_version_and_consolidate>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_new_version_and_consolidate>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_new_version_and_consolidate>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_new_version_and_consolidate>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_new_version_and_consolidate>
            nextitem: <Coroutine test_new_version_and_consolidate_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_new_version_and_consolidate>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_versioning.py::test_new_version_and_consolidate
            location: ('tests/functional/test_versioning.py', 7, 'test_new_version_and_consolidate')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_new_version_and_consolidate_async>
          nextitem: <Function test_version_of_version>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_versioning.py::test_new_version_and_consolidate_async
            location: ('tests/functional/test_versioning.py', 19, 'test_new_version_and_consolidate_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_new_version_and_consolidate_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_new_version_and_consolidate_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_new_version_and_consolidate_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_new_version_and_consolidate_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_new_version_and_consolidate_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_new_version_and_consolidate_async>
            nextitem: <Function test_version_of_version>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_new_version_and_consolidate_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_new_version_and_consolidate_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_versioning.py::test_new_version_and_consolidate_async
            location: ('tests/functional/test_versioning.py', 19, 'test_new_version_and_consolidate_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_version_of_version>
          nextitem: <Coroutine test_version_of_version_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_versioning.py::test_version_of_version
            location: ('tests/functional/test_versioning.py', 32, 'test_version_of_version')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_version_of_version>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_version_of_version>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_of_version' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_of_version' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_of_version' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_version_of_version>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_version_of_version>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_version_of_version>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_of_version' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_of_version' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_of_version' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_version_of_version>
            nextitem: <Coroutine test_version_of_version_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_version_of_version>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_of_version' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_of_version' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_of_version' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_versioning.py::test_version_of_version
            location: ('tests/functional/test_versioning.py', 32, 'test_version_of_version')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_version_of_version_async>
          nextitem: <Function test_version_references>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_versioning.py::test_version_of_version_async
            location: ('tests/functional/test_versioning.py', 48, 'test_version_of_version_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_version_of_version_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_version_of_version_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_of_version_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_of_version_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_of_version_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_version_of_version_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_version_of_version_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_version_of_version_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_of_version_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_of_version_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_of_version_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_version_of_version_async>
            nextitem: <Function test_version_references>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_version_of_version_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_of_version_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_of_version_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_of_version_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_versioning.py::test_version_of_version_async
            location: ('tests/functional/test_versioning.py', 48, 'test_version_of_version_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_version_references>
          nextitem: <Coroutine test_version_references_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_versioning.py::test_version_references
            location: ('tests/functional/test_versioning.py', 65, 'test_version_references')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_version_references>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_version_references>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_version_references>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_version_references>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_version_references>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_version_references>
            nextitem: <Coroutine test_version_references_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_version_references>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_versioning.py::test_version_references
            location: ('tests/functional/test_versioning.py', 65, 'test_version_references')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_version_references_async>
          nextitem: <Function test_version_references_2>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_versioning.py::test_version_references_async
            location: ('tests/functional/test_versioning.py', 87, 'test_version_references_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_version_references_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_version_references_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_version_references_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_version_references_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_version_references_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_version_references_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_version_references_async>
            nextitem: <Function test_version_references_2>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_version_references_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_versioning.py::test_version_references_async
            location: ('tests/functional/test_versioning.py', 87, 'test_version_references_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_version_references_2>
          nextitem: <Coroutine test_version_references_2_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_versioning.py::test_version_references_2
            location: ('tests/functional/test_versioning.py', 110, 'test_version_references_2')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_version_references_2>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_version_references_2>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references_2' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references_2' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references_2' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_version_references_2>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_version_references_2>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_version_references_2>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references_2' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references_2' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references_2' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_version_references_2>
            nextitem: <Coroutine test_version_references_2_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_version_references_2>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references_2' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references_2' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references_2' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_versioning.py::test_version_references_2
            location: ('tests/functional/test_versioning.py', 110, 'test_version_references_2')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_version_references_2_async>
          nextitem: <Function test_version_references_3>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_versioning.py::test_version_references_2_async
            location: ('tests/functional/test_versioning.py', 134, 'test_version_references_2_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_version_references_2_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_version_references_2_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references_2_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references_2_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references_2_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_version_references_2_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_version_references_2_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_version_references_2_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references_2_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references_2_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references_2_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_version_references_2_async>
            nextitem: <Function test_version_references_3>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_version_references_2_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references_2_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references_2_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references_2_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_versioning.py::test_version_references_2_async
            location: ('tests/functional/test_versioning.py', 134, 'test_version_references_2_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_version_references_3>
          nextitem: <Coroutine test_version_references_3_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_versioning.py::test_version_references_3
            location: ('tests/functional/test_versioning.py', 159, 'test_version_references_3')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_version_references_3>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_version_references_3>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references_3' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references_3' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references_3' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_version_references_3>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_version_references_3>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_version_references_3>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references_3' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references_3' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references_3' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_version_references_3>
            nextitem: <Coroutine test_version_references_3_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_version_references_3>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references_3' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references_3' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references_3' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_versioning.py::test_version_references_3
            location: ('tests/functional/test_versioning.py', 159, 'test_version_references_3')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_version_references_3_async>
          nextitem: <Function test_new_object_version>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_versioning.py::test_version_references_3_async
            location: ('tests/functional/test_versioning.py', 182, 'test_version_references_3_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_version_references_3_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_version_references_3_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references_3_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references_3_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references_3_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_version_references_3_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_version_references_3_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_version_references_3_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references_3_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references_3_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references_3_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_version_references_3_async>
            nextitem: <Function test_new_object_version>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_version_references_3_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_version_references_3_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_version_references_3_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_version_references_3_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_versioning.py::test_version_references_3_async
            location: ('tests/functional/test_versioning.py', 182, 'test_version_references_3_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_new_object_version>
          nextitem: <Coroutine test_new_object_version_async>
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_versioning.py::test_new_object_version
            location: ('tests/functional/test_versioning.py', 206, 'test_new_object_version')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_new_object_version>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_new_object_version>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_new_object_version' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_new_object_version' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_new_object_version' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_new_object_version>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_new_object_version>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_new_object_version>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_new_object_version' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_new_object_version' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_new_object_version' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_new_object_version>
            nextitem: <Coroutine test_new_object_version_async>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_new_object_version>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_new_object_version' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_new_object_version' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_new_object_version' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_versioning.py::test_new_object_version
            location: ('tests/functional/test_versioning.py', 206, 'test_new_object_version')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Coroutine test_new_object_version_async>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: tests/functional/test_versioning.py::test_new_object_version_async
            location: ('tests/functional/test_versioning.py', 225, 'test_new_object_version_async')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_new_object_version_async>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_new_object_version_async>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_new_object_version_async' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_new_object_version_async' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_new_object_version_async' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_new_object_version_async>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_new_object_version_async>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_new_object_version_async>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_new_object_version_async' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_new_object_version_async' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_new_object_version_async' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_new_object_version_async>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_new_object_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_new_object_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_version_references_3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_version_references_3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_version_references_2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_version_references_2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_version_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_version_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_version_of_version_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_version_of_version>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_new_version_and_consolidate_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_new_version_and_consolidate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_new_replica_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_new_replica>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_move_local_object_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_move_local_object_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_move_local_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_move_local_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_move_recursive_reference_cycle_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_move_recursive_reference_cycle_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_move_recursive_reference_cycle_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_move_recursive_reference_cycle_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_move_recursive_reference_of_reference_v4_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_move_recursive_reference_of_reference_v4>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_move_recursive_reference_of_reference_v3_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_move_recursive_reference_of_reference_v3>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_move_recursive_reference_of_reference_v2_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_move_recursive_reference_of_reference_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_move_recursive_reference_of_reference_v1_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_move_recursive_reference_of_reference_v1>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_move_recursive_not_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_move_recursive_not_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_move_recursive_remotes_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_move_recursive_remotes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_wrong_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_wrong_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_move_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_move_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_move_unload_object_reference_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_move_unload_object_reference>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_move_unload_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_move_unload_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_not_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_not_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_recursive_move_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_recursive_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_move_object_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_move_object>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_remote_make_persistent_backend>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_remote_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_remote_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_remote_automatic_register>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_persistent_references_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_persistent_references>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_make_persistent_already_registered_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_make_persistent_already_registered>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_make_persistent_backend_id_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_make_persistent_backend_id>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_make_persistent_cycle_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_make_persistent_cycle>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_make_persistent_recursive_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_make_persistent_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_make_persistent_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_make_persistent_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_make_persistent_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_make_persistent_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_load_from_inmemory>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_unloaded_set_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_unloaded_get_property>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_reference_is_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_self_is_not_unloaded>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_getstate_move_box_recursive>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_getstate_move_box>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_getstate_move>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_getstate_unload_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_getstate_unload>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_getstate_v2>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_getstate>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_client_settings>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_alien_getsetdelattr>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_alien_getsetdelitem>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_alien_pydantic_model>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_alien_python_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_alien_proxy_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_alien_builtin>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_get_aliases_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_get_aliases>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_add_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_add_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_same_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_same_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_delete_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_delete_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_get_by_alias_async>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_get_by_alias>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_remote_activemethod>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_activemethod_inner_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_activemethod_non_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_activemethod_defined_properties>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_activemethod_persistent_argument>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid='tests/functional'>
              request: <SubRequest 'client' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='deploy_dataclay' scope='session' baseid='tests/functional'>
              request: <SubRequest 'deploy_dataclay' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_services' scope='session' baseid=''>
              request: <SubRequest 'docker_services' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_cleanup' scope='session' baseid=''>
              request: <SubRequest 'docker_cleanup' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_setup' scope='session' baseid=''>
              request: <SubRequest 'docker_setup' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_project_name' scope='session' baseid=''>
              request: <SubRequest 'docker_compose_project_name' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_file' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_file' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_compose_command' scope='session' baseid='tests/functional'>
              request: <SubRequest 'docker_compose_command' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='docker_ip' scope='session' baseid=''>
              request: <SubRequest 'docker_ip' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Function test_activemethod_argument_make_persistent>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_new_object_version_async>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/functional/test_versioning.py::test_new_object_version_async' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/functional/test_versioning.py::test_new_object_version_async' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/functional/test_versioning.py::test_new_object_version_async' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x749aee007f40>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/functional/test_versioning.py::test_new_object_version_async
            location: ('tests/functional/test_versioning.py', 225, 'test_new_object_version_async')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session dataclay exitstatus=<ExitCode.TESTS_FAILED: 1> testsfailed=1 testscollected=101>
        exitstatus: 1
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x749aedce84f0>
          exitstatus: 1
          config: <_pytest.config.Config object at 0x749aee007f40>
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments.formatters [assertion]
      early skip of rewriting module: pygments.formatters._mapping [assertion]
      early skip of rewriting module: pygments.plugin [assertion]
      early skip of rewriting module: pygments.util [assertion]
      early skip of rewriting module: pygments.formatters.terminal [assertion]
      early skip of rewriting module: pygments.formatter [assertion]
      early skip of rewriting module: pygments.styles [assertion]
      early skip of rewriting module: pygments.styles._mapping [assertion]
      early skip of rewriting module: pygments.token [assertion]
      early skip of rewriting module: pygments.console [assertion]
      early skip of rewriting module: pygments.lexers [assertion]
      early skip of rewriting module: pygments.lexers._mapping [assertion]
      early skip of rewriting module: pygments.modeline [assertion]
      early skip of rewriting module: pygments.lexers.python [assertion]
      early skip of rewriting module: pygments.lexer [assertion]
      early skip of rewriting module: pygments.filter [assertion]
      early skip of rewriting module: pygments.filters [assertion]
      early skip of rewriting module: pygments.regexopt [assertion]
      early skip of rewriting module: pygments.unistring [assertion]
        pytest_report_teststatus [hook]
            report: <TestReport 'tests/functional/test_alien.py::test_alien_pydantic_model' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x749aee007f40>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x749aee007f40>
    finish pytest_unconfigure --> [] [hook]
